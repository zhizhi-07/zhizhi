var e=Object.defineProperty,t=(t,n,r)=>((t,n,r)=>n in t?e(t,n,{enumerable:!0,configurable:!0,writable:!0,value:r}):t[n]=r)(t,"symbol"!=typeof n?n+"":n,r);import"./react-vendor-D8ofYTc3.js";import{_ as n}from"./pages-DOIfEKyP.js";const r={API_SETTINGS:"apiSettings"},a=(e,t)=>{try{const n=localStorage.getItem(e);return n?JSON.parse(n):t}catch{return t}},o=(e,t)=>{const n=JSON.stringify(t);try{return localStorage.setItem(e,n),!0}catch(r){if(r instanceof Error&&"QuotaExceededError"===r.name){c();try{return localStorage.setItem(e,n),!0}catch(a){return!1}}return!1}},s=()=>{try{let e=0;const t=["temp_","cache_","preview_"];for(let n=localStorage.length-1;n>=0;n--){const r=localStorage.key(n);r&&t.some(e=>r.startsWith(e))&&(localStorage.removeItem(r),e++)}}catch(e){}};let i=0;const c=()=>{try{const e=l();e.percentage;const t=Date.now();e.percentage>90&&t-i>3e4&&(i=t,s())}catch(e){}},l=()=>{let e=0;try{for(let t=0;t<localStorage.length;t++){const n=localStorage.key(t);if(n){const t=localStorage.getItem(n);t&&(e+=n.length+t.length)}}}catch(r){}const t=52428800,n=e/t*100;return{used:Math.round(e/1024),total:Math.round(51200),percentage:Math.round(10*n)/10}},u=()=>{s();try{const e=[];for(let t=0;t<localStorage.length;t++){const n=localStorage.key(t);n&&(n.includes("moments")||n.includes("ai_moments"))&&e.push(n)}e.forEach(e=>{try{const t=JSON.parse(localStorage.getItem(e)||"[]");if(Array.isArray(t)&&t.length>200){const n=t.slice(-200);localStorage.setItem(e,JSON.stringify(n))}}catch(t){}})}catch(e){}},m=()=>{try{for(let t=0;t<localStorage.length;t++){const n=localStorage.key(t);if(n&&n.startsWith("chat_messages_"))try{const e=JSON.parse(localStorage.getItem(n)||"[]").map(e=>({id:e.id,content:e.content,sender:e.sender,timestamp:e.timestamp,type:e.type||"text"}));localStorage.setItem(n,JSON.stringify(e))}catch(e){}}}catch(t){}},d={CHARACTERS:"characters",CHATS:"chats",MESSAGES:"messages",SETTINGS:"settings",LOREBOOKS:"lorebooks",MOMENTS:"moments",GROUPS:"groups",EMOJIS:"emojis"};function h(){return new Promise((e,t)=>{const n=indexedDB.open("WeChatAppDB",1);n.onerror=()=>t(n.error),n.onsuccess=()=>e(n.result),n.onupgradeneeded=e=>{const t=e.target.result;if(!t.objectStoreNames.contains(d.CHARACTERS)){t.createObjectStore(d.CHARACTERS,{keyPath:"id"}).createIndex("name","name",{unique:!1})}if(!t.objectStoreNames.contains(d.CHATS)){const e=t.createObjectStore(d.CHATS,{keyPath:"id"});e.createIndex("characterId","characterId",{unique:!1}),e.createIndex("lastMessageTime","lastMessageTime",{unique:!1})}if(!t.objectStoreNames.contains(d.MESSAGES)){const e=t.createObjectStore(d.MESSAGES,{keyPath:"id"});e.createIndex("chatId","chatId",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}if(t.objectStoreNames.contains(d.SETTINGS)||t.createObjectStore(d.SETTINGS,{keyPath:"key"}),!t.objectStoreNames.contains(d.LOREBOOKS)){t.createObjectStore(d.LOREBOOKS,{keyPath:"id"}).createIndex("name","name",{unique:!1})}if(!t.objectStoreNames.contains(d.MOMENTS)){const e=t.createObjectStore(d.MOMENTS,{keyPath:"id"});e.createIndex("characterId","characterId",{unique:!1}),e.createIndex("timestamp","timestamp",{unique:!1})}if(t.objectStoreNames.contains(d.GROUPS)||t.createObjectStore(d.GROUPS,{keyPath:"id"}),!t.objectStoreNames.contains(d.EMOJIS)){t.createObjectStore(d.EMOJIS,{keyPath:"id"}).createIndex("addTime","addTime",{unique:!1})}}})}let g=null;async function p(){return g||(g=await h(),g)}async function f(e,t){const n=await p();return new Promise((r,a)=>{const o=n.transaction(e,"readwrite").objectStore(e).put(t);o.onsuccess=()=>r(),o.onerror=()=>a(o.error)})}async function y(e){const t=await p();return new Promise((n,r)=>{const a=t.transaction(e,"readonly").objectStore(e).getAll();a.onsuccess=()=>n(a.result||[]),a.onerror=()=>r(a.error)})}async function w(e,t){const n=await p();return new Promise((r,a)=>{const o=n.transaction(e,"readwrite").objectStore(e).delete(t);o.onsuccess=()=>r(),o.onerror=()=>a(o.error)})}async function S(e){const t=await p();return new Promise((n,r)=>{const a=t.transaction(e,"readwrite").objectStore(e).clear();a.onsuccess=()=>n(),a.onerror=()=>r(a.error)})}const I=Object.freeze(Object.defineProperty({__proto__:null,STORES:d,clearStore:S,deleteItem:w,getAllItems:y,getItem:async function(e,t){const n=await p();return new Promise((r,a)=>{const o=n.transaction(e,"readonly").objectStore(e).get(t);o.onsuccess=()=>r(o.result||null),o.onerror=()=>a(o.error)})},initDB:h,setItem:f},Symbol.toStringTag,{value:"Module"}));function k(e,t){if(t<=0||e<=0)return[];const n=[];let r=100*e;for(let a=0;a<t-1;a++){const e=r/(t-a)*2,o=Math.random()*e,s=Math.max(1,Math.floor(o));n.push(s),r-=s}n.push(Math.max(1,r));return n.map(e=>Math.round(e)/100).sort(()=>Math.random()-.5)}function _(e){let t=0,n=null;return Object.entries(e).forEach(([e,r])=>{r.amount>t&&(t=r.amount,n=e)}),n}"undefined"!=typeof window&&(window.clearAllAvatarCache=function(){const e=[];for(let t=0;t<localStorage.length;t++){const n=localStorage.key(t);n&&(n.includes("avatar_description")||n.includes("avatar_fingerprint")||n.includes("avatar_recognized_at"))&&e.push(n)}return e.forEach(e=>{localStorage.removeItem(e)}),e.length},window.clearUserAvatarCache=function(e){localStorage.removeItem(`user_avatar_description_${e}`),localStorage.removeItem(`user_avatar_fingerprint_${e}`),localStorage.removeItem(`user_avatar_recognized_at_${e}`)},window.clearCharacterAvatarCache=function(e){localStorage.removeItem(`character_avatar_description_${e}`),localStorage.removeItem(`character_avatar_fingerprint_${e}`),localStorage.removeItem(`character_avatar_recognized_at_${e}`)});const v="forum_posts",b="forum_comments",$="forum_drafts",x="forum_favorites",O="forum_likes",A="forum_notifications",N="forum_direct_messages";function M(e,t){if(!e)return t;try{return JSON.parse(e)}catch(n){return t}}function D(e,t){try{return localStorage.setItem(e,JSON.stringify(t)),!0}catch(n){return!1}}function C(){return`${Date.now()}_${Math.random().toString(36).substr(2,9)}`}function j(){return M(localStorage.getItem(v),[])}function E(e){return D(v,e)}function P(e){return j().find(t=>t.id===e)||null}function T(e){const t=j(),n={...e,id:C(),timestamp:Date.now(),likeCount:0,commentCount:0,shareCount:0,isLiked:!1,isFavorited:!1};return t.unshift(n),E(t),function(){const e=ae();e.posts+=1,oe(e)}(),setTimeout(()=>{if(Math.random()<.3){const e=Math.floor(2*Math.random())+1;!function(e=1){const t=ae();t.followers+=e,oe(t)}(e);for(let t=0;t<e;t++)re()}if(Math.random()<.5){se(Math.floor(50*Math.random())+10),ne(n.id)}},3e3*Math.random()+2e3),n}function J(e,t){const n=j(),r=n.findIndex(t=>t.id===e);return-1!==r&&(n[r]={...n[r],...t},E(n))}function L(e){const t=j(),n=t.filter(t=>t.id!==e);if(n.length===t.length)return!1;return R(B().filter(t=>t.postId!==e)),E(n)}function z(e={}){let t=j();if(e.authorId&&(t=t.filter(t=>t.authorId===e.authorId)),e.tag&&(t=t.filter(t=>t.tags&&t.tags.includes(e.tag))),e.keyword){const n=e.keyword.toLowerCase();t=t.filter(e=>e.content.toLowerCase().includes(n)||e.authorName.toLowerCase().includes(n))}"hot"===e.sortBy?t.sort((e,t)=>t.likeCount+2*t.commentCount-(e.likeCount+2*e.commentCount)):"like"===e.sortBy?t.sort((e,t)=>t.likeCount-e.likeCount):t.sort((e,t)=>t.timestamp-e.timestamp);const n=e.limit||20,r=e.offset||0;return{items:t.slice(r,r+n),total:t.length,hasMore:r+n<t.length,nextOffset:r+n}}function B(){return M(localStorage.getItem(b),[])}function R(e){return D(b,e)}function U(e){return B().filter(t=>t.postId===e)}function q(e){const t=B(),n={...e,id:C(),timestamp:Date.now(),likeCount:0,isLiked:!1};t.push(n),R(t);const r=j(),a=r.findIndex(t=>t.id===e.postId);return-1!==a&&(r[a].commentCount++,E(r)),e.replyTo&&e.replyToUserId&&e.replyToUserId!==e.authorId&&Z({type:"comment",fromUserId:e.authorId,fromUserName:e.authorName,fromUserAvatar:e.authorAvatar,content:e.content,postId:e.postId,commentId:n.id,isRead:!1}),setTimeout(()=>{if(Math.random()<.4){se(Math.floor(30*Math.random())+5),ne(e.postId,n.id)}},4e3*Math.random()+3e3),n}function F(e){const t=B(),n=t.find(t=>t.id===e);if(!n)return!1;R(t.filter(t=>t.id!==e));const r=j(),a=r.findIndex(e=>e.id===n.postId);return-1!==a&&(r[a].commentCount=Math.max(0,r[a].commentCount-1),E(r)),!0}function K(){return M(localStorage.getItem(O),[])}function G(e){return K().includes(e)?function(e){const t=K(),n=t.filter(t=>t!==e);if(n.length===t.length)return!1;localStorage.setItem(O,JSON.stringify(n));const r=j(),a=r.findIndex(t=>t.id===e);return-1!==a&&(r[a].likeCount=Math.max(0,r[a].likeCount-1),r[a].isLiked=!1,E(r)),!0}(e):function(e){const t=K();if(t.includes(e))return!1;t.push(e),localStorage.setItem(O,JSON.stringify(t));const n=j(),r=n.findIndex(t=>t.id===e);return-1!==r&&(n[r].likeCount++,n[r].isLiked=!0,E(n)),!0}(e)}function V(){return M(localStorage.getItem(x),[])}function H(e){return V().includes(e)?function(e){const t=V(),n=t.filter(t=>t!==e);if(n.length===t.length)return!1;localStorage.setItem(x,JSON.stringify(n));const r=j(),a=r.findIndex(t=>t.id===e);return-1!==a&&(r[a].isFavorited=!1,E(r)),!0}(e):function(e){const t=V();if(t.includes(e))return!1;t.push(e),localStorage.setItem(x,JSON.stringify(t));const n=j(),r=n.findIndex(t=>t.id===e);return-1!==r&&(n[r].isFavorited=!0,E(n)),!0}(e)}function W(){return M(localStorage.getItem($),[])}function X(e){const t=W(),n={...e,id:C(),timestamp:Date.now()};return t.unshift(n),localStorage.setItem($,JSON.stringify(t)),n}function Q(e){const t=W(),n=t.filter(t=>t.id!==e);return n.length!==t.length&&(localStorage.setItem($,JSON.stringify(n)),!0)}function Y(){if(j().length>0)return;E([{id:C(),authorId:"user1",authorName:"思思考考",authorAvatar:"",isVerified:!0,content:"今天天气真好！☀️ 分享一下我的日常，希望大家都能开开心心的度过每一天。生活中的小确幸总是让人感到温暖。",type:"text",timestamp:Date.now()-36e5,likeCount:1288,commentCount:156,shareCount:89,viewCount:8900,isLiked:!1,isFavorited:!1,tags:["日常","心情"],location:"北京·朝阳区"},{id:C(),authorId:"user2",authorName:"科技达人",authorAvatar:"",isVerified:!0,content:"刚刚看到一个很有意思的技术分享，关于AI的最新进展。科技改变生活，未来可期！🚀",type:"text",timestamp:Date.now()-72e5,likeCount:2156,commentCount:234,shareCount:178,viewCount:15600,isLiked:!1,isFavorited:!1,tags:["科技","AI"],location:"上海·浦东新区"},{id:C(),authorId:"user3",authorName:"美食探店",authorAvatar:"",isVerified:!1,content:"今天打卡了一家超级好吃的餐厅！环境很棒，菜品也很精致。强烈推荐给大家！😋",type:"text",timestamp:Date.now()-108e5,likeCount:567,commentCount:89,shareCount:45,viewCount:4500,isLiked:!1,isFavorited:!1,tags:["美食","探店"],location:"广州·天河区"},{id:C(),authorId:"user4",authorName:"旅行日记",authorAvatar:"",isVerified:!0,content:"在海边看日落🌅 人生就是要多出去走走，看看这个美丽的世界。每一次旅行都是一次心灵的洗礼。",type:"text",timestamp:Date.now()-144e5,likeCount:3456,commentCount:567,shareCount:289,viewCount:23400,isLiked:!1,isFavorited:!1,tags:["旅行","风景"],location:"三亚·海棠湾"},{id:C(),authorId:"user5",authorName:"音乐分享",authorAvatar:"",isVerified:!1,content:"最近在听的一首歌，单曲循环了一整天🎵 音乐真的是治愈心灵的良药。推荐给喜欢的朋友们！",type:"text",timestamp:Date.now()-18e6,likeCount:892,commentCount:145,shareCount:67,viewCount:6700,isLiked:!1,isFavorited:!1,tags:["音乐","分享"],location:"杭州·西湖区"}])}function Z(e){const t=ee(),n={...e,id:C(),timestamp:Date.now()};return t.unshift(n),function(e){localStorage.setItem(A,JSON.stringify(e))}(t),n}function ee(){return M(localStorage.getItem(A),[])}function te(){const e=["赵","钱","孙","李","周","吴","郑","王","冯","陈","褚","卫","蒋","沈","韩","杨","朱","秦","尤","许","何","吕","施","张","孔","曹","严","华","金","魏","陶","姜","戚","谢","邹","喻","柏","水","窦","章","云","苏","潘","葛","奚","范","彭","郎","鲁","韦","昌","马","苗","凤","花","方","俞","任","袁","柳","酆","鲍","史","唐","费","廉","岑","薛","雷","贺","倪","汤","滕","殷","罗","毕","郝","邬","安","常","乐","于","时","傅","皮","卞","齐","康","伍","余","元","卜","顾","孟","平","黄","和","穆","萧","尹"],t=["子涵","雨轩","浩宇","思远","梓涵","欣怡","晨曦","雨萱","诗涵","梓萱","静怡","佳怡","嘉怡","紫涵","雨桐","梓琪","雨泽","宇轩","子轩","博文","俊杰","明轩","天宇","宇航","晨阳","子豪","梓豪","浩然","雨辰","子辰","梓辰","宇辰","晨辰","雨晨","子晨","梓晨","宇晨","诗琪","雨琪","梓琦","宇琦","晨琦","子琦","梓琪","宇琪","晨琪","雨琦"];if(Math.random()<.7){return e[Math.floor(Math.random()*e.length)]+t[Math.floor(Math.random()*t.length)]}return t[Math.floor(Math.random()*t.length)]}function ne(e,t){const n=Math.floor(3*Math.random())+3,r=[];for(let s=0;s<n;s++)r.push(te());const a=n+Math.floor(100*Math.random())+10,o=r.slice(0,3).join("、");Z({type:"like",fromUserId:"system",fromUserName:o,fromUserAvatar:"",content:`${o}等${a}个人赞了你${t?"的评论":"的微博"}`,postId:e,commentId:t,isRead:!1})}function re(){const e=te();Z({type:"follow",fromUserId:`user_${Date.now()}`,fromUserName:e,fromUserAvatar:"",content:"关注了你",isRead:!1})}function ae(){return M(localStorage.getItem("forum_user_stats"),{followers:0,following:0,posts:0,likes:0})}function oe(e){localStorage.setItem("forum_user_stats",JSON.stringify(e))}function se(e=1){const t=ae();t.likes+=e,oe(t)}function ie(){return M(localStorage.getItem(N),[]).sort((e,t)=>t.timestamp-e.timestamp)}function ce(e){const t=ie().map(t=>t.id===e?{...t,isRead:!0}:t);localStorage.setItem(N,JSON.stringify(t))}function le(){return ie().filter(e=>!e.isRead).length}async function ue(e,t,n=15e3){const r=new AbortController,a=setTimeout(()=>r.abort(),n);try{const n=await fetch(e,{...t,signal:r.signal});return clearTimeout(a),n}catch(o){if(clearTimeout(a),"AbortError"===o.name)throw new Error(`请求超时 (${n}ms)`);throw o}}async function me(e,t){let n=t.baseUrl.replace(/\/$/,"");const r=n.endsWith("/v1")?"/chat/completions":"/v1/chat/completions",a=`${n}${r}`,o=await ue(a,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${t.apiKey}`},body:JSON.stringify({model:t.model||"gpt-3.5-turbo",messages:e,temperature:t.temperature??.7,max_tokens:t.maxTokens||2e3})},3e5);if(!o.ok){const e=await o.text();if(401===o.status||403===o.status)throw new Error(`API认证失败 (${o.status})，请检查API密钥`);if(400===o.status&&(e.includes("VLM")||e.includes("Vision")||e.includes("image")||e.includes("multimodal")))throw new Error("VISION_NOT_SUPPORTED");throw new Error(`API调用失败 (${o.status})`)}const s=await o.json();if(!s.choices||!s.choices[0]||!s.choices[0].message)throw new Error("API响应格式错误");return s.choices[0].message.content}async function de(e,t){let n=t.model||"gemini-1.5-flash",r=t.baseUrl.replace(/\/$/,"");const a=r.includes("workers.dev")||r.includes("cloudflare")||r.includes("netlify/functions");a||r.includes("/v1")||r.endsWith("v1beta")||(r=`${r}/v1beta`),n.startsWith("models/")&&(n=n.replace("models/",""));const o=a?`${r}/v1beta/models/${n}:generateContent`:`${r}/models/${n}:generateContent?key=${t.apiKey}`,s=[];let i="";for(const m of e){if("system"===m.role){i="string"==typeof m.content?m.content:"";continue}const e=[];if(i&&"user"===m.role&&(e.push({text:i}),i=""),"string"==typeof m.content)e.push({text:m.content});else if(Array.isArray(m.content))for(const t of m.content)if("text"===t.type&&t.text)e.push({text:t.text});else if("image_url"===t.type&&t.image_url){const n=t.image_url.url;if(n.startsWith("data:image")){const t=n.match(/data:image\/(\w+);base64,(.+)/);t&&e.push({inline_data:{mime_type:`image/${t[1]}`,data:t[2]}})}else n.startsWith("http")&&e.push({text:"[图片链接: "+n+"]"})}s.push({role:"assistant"===m.role?"model":"user",parts:e})}const c=await ue(o,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({contents:s,generationConfig:{temperature:t.temperature??.7,maxOutputTokens:t.maxTokens||2e3}})},3e5);if(!c.ok){await c.text();if(401===c.status||403===c.status)throw new Error(`Google API认证失败 (${c.status})，请检查API密钥`);if(429===c.status)throw new Error("Google API配额超限 (429)");throw new Error(`Google API调用失败 (${c.status})`)}const l=await c.json();if(!l.candidates||!l.candidates[0]||!l.candidates[0].content)throw new Error("Google API响应格式错误");const u=l.candidates[0].content.parts;if(!u||0===u.length)throw new Error("Google API响应内容为空");return u[0].text}async function he(e,t=1,n){var o;const s=a(r.API_SETTINGS,{});if(n&&(s.maxTokens=n),!s.baseUrl||!s.apiKey)throw new Error("请先配置API");const i=s.baseUrl||"";let c=s.provider||"custom";i.includes("generativelanguage.googleapis.com")||i.includes("zhizhi.2373922440jhj.workers.dev")||i.includes("netlify/functions/gemini-proxy")||i.includes("hiapi.online")?c="google":i.includes("api.openai.com")?c="openai":i.includes("api.anthropic.com")?c="claude":i.includes("api.siliconflow.cn")&&(c="siliconflow"),s.provider=c;const l=Array.isArray(e)?e:[{role:"user",content:e}],u=null==(o=l[l.length-1])?void 0:o.content;"string"==typeof u&&u.substring(0,100);let m=null;for(let r=0;r<=t;r++)try{r>0&&await new Promise(e=>setTimeout(e,Math.min(500*r,2e3)));const e=Date.now();let t;t="google"===c?await de(l,s):await me(l,s);Date.now();return t}catch(d){if(m=d,(d.message.includes("Failed to fetch")||d.message.includes("NetworkError")||d.message.includes("请求超时"))&&r<t)continue;if(d.message.includes("认证失败")||d.message.includes("请先配置API"))throw d}throw m||new Error("API调用失败")}async function ge(){try{return await he("你好"),!0}catch{return!1}}async function pe(e){const{baseUrl:t,apiKey:n,provider:r}=e;if(!t||!n)throw new Error("请先填写API地址和密钥");try{if("google"===r){let e=t.replace(/\/$/,"");e.includes("/v1")||e.endsWith("v1beta")||(e=`${e}/v1beta`);const r=`${e}/models?key=${n}`,a=await ue(r,{method:"GET",headers:{"Content-Type":"application/json"}},1e4);if(!a.ok){await a.text();if(401===a.status||403===a.status)throw new Error("Google API认证失败，请检查API密钥是否正确");return["gemini-2.0-flash-exp","gemini-1.5-flash","gemini-1.5-flash-8b","gemini-1.5-pro","gemini-pro"]}const o=await a.json();if(o.models&&Array.isArray(o.models)){const e=o.models.filter(e=>{var t;return e.name&&(null==(t=e.supportedGenerationMethods)?void 0:t.includes("generateContent"))}).map(e=>e.name.replace("models/",""));return e.length>0?e:["gemini-2.0-flash-exp","gemini-1.5-flash","gemini-1.5-flash-8b","gemini-1.5-pro","gemini-pro"]}return["gemini-2.0-flash-exp","gemini-1.5-flash","gemini-1.5-flash-8b","gemini-1.5-pro","gemini-pro"]}{const e=t.endsWith("/v1")?`${t}/models`:`${t}/v1/models`,r=await ue(e,{method:"GET",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"}},1e4);if(!r.ok)throw new Error(`拉取模型失败 (${r.status})`);const a=await r.json();if(a.data&&Array.isArray(a.data)){return a.data.map(e=>e.id).sort()}throw new Error("API响应格式错误")}}catch(a){throw new Error(a.message||"拉取模型列表失败")}}const fe=Object.freeze(Object.defineProperty({__proto__:null,callAI:he,fetchModels:pe,testApiConnection:ge},Symbol.toStringTag,{value:"Module"})),ye=()=>{try{const e=localStorage.getItem("moment_notifications");return e?JSON.parse(e):[]}catch(e){return[]}},we=e=>{try{const t=ye(),n=[{...e,id:Date.now().toString(),timestamp:Date.now(),read:!1},...t].slice(0,100);localStorage.setItem("moment_notifications",JSON.stringify(n))}catch(t){}},Se=()=>ye().filter(e=>!e.read).length,Ie=()=>{try{const e=ye().map(e=>({...e,read:!0}));localStorage.setItem("moment_notifications",JSON.stringify(e))}catch(e){}},ke=async(e,t)=>{try{const n=e.map((e,t)=>{const n=e.recentMessages.slice(-2).map(t=>{const n=t.content.length>50?t.content.substring(0,50)+"...":t.content;return`${"user"===t.role?"用户":e.name}: ${n}`}).join("\n"),r=e.description.length>120?e.description.substring(0,120)+"...":e.description;return`${t+1}. ${e.name}\n人设：${r}\n${n?`聊天：\n${n}`:"无聊天"}`}).join("\n\n"),r=t.comments.length>0?t.comments.map((e,t)=>`[${t+1}] ${e.userName}说：${e.content}`).join("\n"):"暂无",a=`【朋友圈】\n发布者：${t.userName}\n内容：${t.content}\n${t.location?`位置：${t.location}`:""}\n\n点赞：${t.likes.map(e=>e.userName).join("、")||"暂无"}\n\n【评论区对话】\n${r}\n\n⚠️ 注意：仔细看清楚每条评论是谁说的！\n• ${t.userName} = 发布者\n• 微信用户 = 真实用户\n• 其他名字 = AI角色\n\n【AI角色信息】\n${n}\n\n【任务】\n为每个AI决定是否互动这条朋友圈。\n\n⚠️ 重要规则：\n1. 如果有人@我，我应该回复（即使我之前评论过）\n2. 如果我已经评论过，但没人@我，可以skip或like\n3. 如果没有@我，大部分情况应该like，不要总是comment\n\n思考步骤（必须按顺序思考）：\n1. 仔细看评论区，谁说了什么？\n2. 有人@我吗？他们对我说了什么？\n3. 如果有人@我，我应该针对他们说的话回复\n4. 如果没人@我，我要不要主动说点什么？\n5. 我之前说过什么吗？不要重复\n\n互动方式（可以同时做多个）：\n• skip = 跳过（完全不感兴趣）\n• like = 点赞（看到了，表示支持）\n• comment = 公开评论（想说点什么，让所有人看到）\n• message = 私信（想单独跟发布者聊聊，不想让别人看到）\n\n✨ 重要：可以同时做多个动作！\n• 点赞+评论：很常见的组合\n• 点赞+私信：公开点赞，私下再聊\n• 评论+私信：公开回应，私下补充\n• 点赞+评论+私信：都可以！\n\n硬性规则：\n• 被@了应该回复（comment或message）\n• 不要重复说同样的话\n• comment是公开的，所有人能看到\n• message是私密的，只有发布者能看到\n\n请按以下JSON格式回复（只输出JSON数组，不要有其他内容）：\n[\n  {\n    "characterName": "角色名字",\n    "actions": ["like", "comment"],\n    "comment": "如果有comment动作，这里写评论内容（5-30字）",\n    "message": "如果有message动作，这里写私信内容（10-50字）",\n    "reason": "简短说明决策理由（可选）"\n  },\n  ...\n]\n\n示例：\n[\n  {\n    "characterName": "小雪",\n    "actions": ["like", "comment"],\n    "comment": "哈哈好可爱",\n    "message": "",\n    "reason": "很有趣，点赞加评论"\n  },\n  {\n    "characterName": "小明",\n    "actions": ["like", "message"],\n    "comment": "",\n    "message": "看到你发的朋友圈了，有空一起出来玩吧",\n    "reason": "想私下聊聊"\n  },\n  {\n    "characterName": "小李",\n    "actions": ["skip"],\n    "comment": "",\n    "message": "",\n    "reason": "和我无关"\n  }\n]\n\n现在请为所有角色做出决定：`,o=(await he([{role:"user",content:a}],1,1e4)).match(/\[[\s\S]*\]/);if(!o)return[];return JSON.parse(o[0]).map(t=>{const n=e.find(e=>e.name===t.characterName);return{characterId:(null==n?void 0:n.id)||"",characterName:t.characterName,actions:Array.isArray(t.actions)?t.actions:[t.action||"skip"],comment:t.comment||void 0,message:t.message||void 0,reason:t.reason}})}catch(n){return[]}},_e=async(e,t,n,r,a,o,s)=>{const i=r.filter(e=>"true"===localStorage.getItem(`ai_moments_enabled_${e.id}`)&&e.name!==n),c=t.comments.map(e=>e.content.toLowerCase().trim());if(0!==i.length)try{const n=i.map(e=>{const t=a(e.id);return{id:e.id,name:e.name,description:e.description||"",recentMessages:t}});(await ke(n,t)).forEach(n=>{const r=i.find(e=>e.id===n.characterId);if(r){if(n.actions.includes("like")){t.likes.some(e=>e.userId===n.characterId)||(o(e,n.characterId,n.characterName,r.avatar),we({type:"like",momentId:e,momentContent:t.content,fromUserId:n.characterId,fromUserName:n.characterName,fromUserAvatar:r.avatar}))}if(n.actions.includes("comment")&&n.comment){const a=n.comment.replace(/@\S+\s*/g,"").toLowerCase().trim();c.some(e=>e.replace(/@\S+\s*/g,"").toLowerCase().trim()===a)||(s(e,n.characterId,n.characterName,r.avatar,n.comment),c.push(n.comment.toLowerCase().trim()),we({type:"comment",momentId:e,momentContent:t.content,fromUserId:n.characterId,fromUserName:n.characterName,fromUserAvatar:r.avatar,comment:n.comment}))}if(n.actions.includes("message")&&n.message){const e=localStorage.getItem(`chat_messages_${n.characterId}`),t=e?JSON.parse(e):[],r={id:Date.now()+Math.random(),type:"received",content:n.message,time:(new Date).toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"}),timestamp:Date.now(),messageType:"text",blocked:!1};t.push(r),localStorage.setItem(`chat_messages_${n.characterId}`,JSON.stringify(t))}n.actions.includes("skip")||n.actions.length}})}catch(l){}},ve=[{days:1,name:"初识",emoji:"👋"},{days:3,name:"相识",emoji:"😊"},{days:7,name:"熟悉",emoji:"🤝"},{days:14,name:"知心",emoji:"💕"},{days:30,name:"挚友",emoji:"❤️"},{days:50,name:"密友",emoji:"💖"},{days:100,name:"灵魂伴侣",emoji:"💗"},{days:365,name:"命中注定",emoji:"💍"}];function be(){return(new Date).toISOString().split("T")[0]}function $e(){const e=new Date;return`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-01`}function xe(e,t){const n=new Date(e),r=new Date(t),a=Math.abs(r.getTime()-n.getTime());return Math.floor(a/864e5)}function Oe(e){const t=`streak_${e}`,n=localStorage.getItem(t);return n?JSON.parse(n):{characterId:e,currentStreak:0,longestStreak:0,lastChatDate:"",totalDays:0,breakCount:0,milestones:[],hasUsedRevive:!1,reviveResetDate:$e()}}function Ae(e){const t=`streak_${e.characterId}`;localStorage.setItem(t,JSON.stringify(e))}function Ne(e){const t=Oe(e),n=be();if(t.lastChatDate===n)return t;const r=$e();if(t.reviveResetDate!==r&&(t.hasUsedRevive=!1,t.reviveResetDate=r),!t.lastChatDate)return t.currentStreak=1,t.longestStreak=1,t.totalDays=1,t.lastChatDate=n,t.milestones=[1],Ae(t),t;const a=xe(t.lastChatDate,n);return 1===a?(t.currentStreak+=1,t.totalDays+=1,t.currentStreak>t.longestStreak&&(t.longestStreak=t.currentStreak),t.milestones.includes(t.currentStreak)||(t.milestones.push(t.currentStreak),t.milestones.sort((e,t)=>e-t))):a>1&&(t.breakCount+=1,t.currentStreak=1,t.totalDays+=1),t.lastChatDate=n,Ae(t),t}function Me(e){for(let t=ve.length-1;t>=0;t--)if(e>=ve[t].days)return ve[t];return ve[0]}function De(e){for(const t of ve)if(e<t.days)return t;return null}function Ce(e){const t=Oe(e);if(!t.lastChatDate)return 0;const n=xe(t.lastChatDate,be())+1;return 0===n?0:Math.round(t.totalDays/n*100)}const je=new class{constructor(){t(this,"observers",new Map),t(this,"cache",new Map),t(this,"checkInterval",null),t(this,"CHECK_INTERVAL_MS",1e3),t(this,"handleStorageEvent",e=>{e.key&&this.observers.has(e.key)&&(this.cache.set(e.key,e.newValue),this.notifyObservers(e.key,e.newValue))}),window.addEventListener("storage",this.handleStorageEvent)}notifyObservers(e,t){const n=this.observers.get(e);n&&n.forEach(e=>e(t))}startPolling(){null===this.checkInterval&&(this.checkInterval=window.setInterval(()=>{this.observers.forEach((e,t)=>{const n=localStorage.getItem(t);n!==this.cache.get(t)&&(this.cache.set(t,n),this.notifyObservers(t,n))})},this.CHECK_INTERVAL_MS))}stopPolling(){null!==this.checkInterval&&(clearInterval(this.checkInterval),this.checkInterval=null)}observe(e,t){return this.observers.has(e)||(this.observers.set(e,new Set),this.cache.set(e,localStorage.getItem(e))),this.observers.get(e).add(t),1===this.observers.size&&this.startPolling(),t(localStorage.getItem(e)),()=>{const n=this.observers.get(e);n&&(n.delete(t),0===n.size&&(this.observers.delete(e),this.cache.delete(e))),0===this.observers.size&&this.stopPolling()}}trigger(e){const t=localStorage.getItem(e);this.cache.set(e,t),this.notifyObservers(e,t)}destroy(){window.removeEventListener("storage",this.handleStorageEvent),this.stopPolling(),this.observers.clear(),this.cache.clear()}},Ee=(e,t=!1)=>{if(!e||""===e.trim())return"";const n=e.trim();return"default"===n||n.length<=2?"":n.startsWith("data:image")||n.startsWith("http")||n.startsWith("/")?n:""},Pe=e=>Ee(e,!0),Te=e=>Ee(e,!1),Je="unread_messages";function Le(){const e=localStorage.getItem(Je);if(!e)return new Map;try{const t=JSON.parse(e);return new Map(t)}catch(t){return new Map}}function ze(e){localStorage.setItem(Je,JSON.stringify(Array.from(e.entries())))}function Be(e,t=1){const n=Le(),r=n.get(e);r?(r.count+=t,r.lastUpdate=Date.now()):n.set(e,{characterId:e,count:t,lastUpdate:Date.now()}),ze(n),qe(e,r?r.count:t)}function Re(e){const t=Le();t.delete(e),ze(t),qe(e,0)}function Ue(e){var t;return(null==(t=Le().get(e))?void 0:t.count)||0}function qe(e,t){try{const n=localStorage.getItem("chatList");if(!n)return;const r=JSON.parse(n),a=r.findIndex(t=>t.characterId===e);a>=0&&(r[a].unread=t>0?t:void 0,localStorage.setItem("chatList",JSON.stringify(r)),window.dispatchEvent(new StorageEvent("storage",{key:"chatList",newValue:JSON.stringify(r),url:window.location.href})))}catch(n){}}const Fe=new Map;function Ke(e){Fe.set(e,{characterId:e,requestTime:Date.now(),isProcessing:!0}),localStorage.setItem("ai_replying",JSON.stringify(Array.from(Fe.entries())))}function Ge(e){Fe.delete(e),localStorage.setItem("ai_replying",JSON.stringify(Array.from(Fe.entries())))}function Ve(e){return Fe.has(e)}async function He(){try{return await y(d.EMOJIS)}catch(e){return[]}}async function We(e){try{await S(d.EMOJIS);for(const t of e)await f(d.EMOJIS,t);return!0}catch(t){return!1}}async function Xe(e){try{return await w(d.EMOJIS,e),!0}catch(t){return!1}}async function Qe(e){try{const{getItem:t}=await n(async()=>{const{getItem:e}=await Promise.resolve().then(()=>I);return{getItem:e}},void 0),r=await t(d.EMOJIS,e);r&&(r.useCount=(r.useCount||0)+1,await f(d.EMOJIS,r))}catch(t){}}async function Ye(){const e=await He(),t={version:"2.0",exportTime:(new Date).toISOString(),count:e.length,storage:"localStorage",emojis:e};return JSON.stringify(t,null,2)}async function Ze(e,t=!1){try{const n=JSON.parse(e);if(!n.emojis||!Array.isArray(n.emojis))return{success:!1,count:0,message:"导入文件格式不正确"};let r,a=0,o=0;if(t)r=n.emojis,a=r.length;else{const e=await He();o=e.length;const t=[...e,...n.emojis],s=[],i=new Set;t.forEach(e=>{i.has(e.url)||(i.add(e.url),s.push(e))}),r=s,a=r.length-o}if(await We(r)){return{success:!0,count:a,message:`✅ 成功${t?"替换导入":"追加导入"} ${a} 个表情包！\n\n${t?"":`原有: ${o} 个\n`}总计: ${r.length} 个`}}return{success:!1,count:0,message:"保存失败"}}catch(n){return{success:!1,count:0,message:`导入失败：${n instanceof Error?n.message:"未知错误"}`}}}async function et(){try{return await S(d.EMOJIS),!0}catch(e){return!1}}"undefined"!=typeof window&&function(){const e=localStorage.getItem("ai_replying");if(e)try{JSON.parse(e).forEach(([e,t])=>{Date.now()-t.requestTime<3e5&&Fe.set(e,t)})}catch(t){}}();const tt=Object.freeze(Object.defineProperty({__proto__:null,addEmoji:async function(e){try{const t={...e,id:Date.now(),addTime:(new Date).toISOString(),useCount:0};return await f(d.EMOJIS,t),t}catch(t){return null}},clearAllEmojis:et,deleteEmoji:Xe,exportEmojis:Ye,getEmojis:He,importEmojis:Ze,incrementUseCount:Qe,saveEmojis:We},Symbol.toStringTag,{value:"Module"}));function nt(e,t,n){const r=t.name,a=n.name||n.nickname||"User";return e.replace(/\{\{char\}\}/gi,r).replace(/\{\{user\}\}/gi,a).replace(/\{\{personality\}\}/gi,t.personality||t.description||"").replace(/\{\{scenario\}\}/gi,t.scenario||"").replace(/\{\{description\}\}/gi,t.description||"").replace(/\{\{user_description\}\}/gi,t.userInfo||"")}const rt=(e,t,n,r,a,o,s,i,c,l)=>{const u=new Date,m=u.toLocaleDateString("zh-CN",{year:"numeric",month:"long",day:"numeric",weekday:"long"}),d=u.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"}),h=u.getHours();let g="";g=h>=0&&h<6?"凌晨":h>=6&&h<9?"早上":h>=9&&h<12?"上午":h>=12&&h<14?"中午":h>=14&&h<18?"下午":h>=18&&h<22?"晚上":"深夜";const p=n?'\n## 【旁白模式】\n你可以用 (动作) 或 *心理* 描述来增加表现力\n示例："(抬头看窗外) 下雨了呢" 或 "*有点想他了* 今天好无聊啊"\n':"",f=n?"":'\n## 【纯聊天模式】\n你在用手机打字，像在微信/QQ上和朋友聊天：\n\n想表达笑 → 直接打"哈哈哈""笑死""绷不住了"\n想表达动作 → 用文字说"我人都笑傻了""刚吃完饭""在路上走着呢"\n想表达情绪 → 直接说"有点烦""好开心""想你了"\n\n自然、口语化、真实。\n',y=a&&a.length>0?`\n## 网络用语参考\n${a.map(e=>`"${e.梗}" - ${e.含义}`).join("\n")}\n\n这些是流行的网络用语。使用原则：\n1. 先理解含义，判断是否符合你现在的情绪和想说的话\n2. 如果合适就用，不合适就不用，完全看情况\n3. 像真人一样自然地融入对话，不要刻意\n`:"";return`${!!(e.personality||e.scenario||e.systemPrompt)?`${e.systemPrompt?nt(e.systemPrompt,e,t):`你是 ${e.name}，正在用手机和 ${t.name} 聊天。`}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n## 【角色信息】\n${e.description?nt(e.description,e,t):""}\n${e.personality?`\n### 性格\n${nt(e.personality,e,t)}`:""}\n${e.scenario?`\n### 场景设定\n${nt(e.scenario,e,t)}`:""}\n\n${e.userInfo?`## 【关于 ${t.name}】\n${nt(e.userInfo,e,t)}\n\n💡 这些是已知信息，你都知道。\n`:""}\n${e.exampleMessages?`\n## 【对话示例】\n${nt(e.exampleMessages,e,t)}\n\n💡 参考这种说话风格。\n`:""}\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`:`你是 ${e.name}，正在用手机和 ${t.name} 聊天。\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n## 【关于你自己】\n${e.description||"普通人，有自己的生活。"}\n\n### 你的资料\n• 真实名字：${e.name}\n• 网名：${e.nickname||e.name}\n• 个性签名：${e.signature||"暂无"}\n${e.tags&&e.tags.length>0?`• 标签：${e.tags.join("、")}`:""}\n${l?`• 头像：${l}`:""}\n\n💡 这是你的真实身份、背景、经历、性格。按照这个人设来。\n💡 你可以看到自己的网名、个性签名${l?"、头像":""}和标签。\n\n## 【关于 ${t.nickname||t.name}（对话者）】\n• 真实名字：${t.name}\n• 网名：${t.nickname||t.name}\n${t.remark?`• 备注：${t.remark}（你给对方设置的备注）`:""}\n${t.signature?`• 个性签名：${t.signature}`:""}\n${c?`• 头像：${c}`:""}\n\n${e.userInfo?`${e.userInfo}\n\n`:""}💡 这些是已知信息，你都知道。你可以看到对方的网名${t.remark?"、你给对方设置的备注":""}${t.signature?"、个性签名":""}${c?"、头像":""}。\n\n你的性格是稳定的。基于上面的对话历史，保持情绪和态度的自然过渡。\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━`}\n\n## 当前状态\n时间：${m} ${g} ${d}\n${void 0!==r&&r>0?`续火花：${r}天`:""}\n${s||""}\n${p}${f}\n\n## 你能做什么\n你在用一个功能丰富的聊天App，像真人一样想发什么就发什么：\n\n💬 **普通文字** - 最常用，随便聊\n😊 **表情包** - [表情包:数字]\n🎤 **语音** - [语音:内容]\n📷 **照片** - [照片:画面描述]（直接描述画面，例如：[照片:咖啡店窗边，阳光洒在拿铁上，手机在桌上]）\n📍 **位置** - [位置:地名:地址]\n🎵 **分享音乐** - [分享音乐:歌名:歌手]（随时分享喜欢的歌曲，例如：[分享音乐:晴天:周杰伦]）\n🎵 **一起听邀请** - [一起听:歌名:歌手]（邀请对方一起听歌，例如：[一起听:晴天:周杰伦]）\n   ⚠️ 区别：**分享音乐**是推荐歌曲，**一起听**是发送邀请等待对方接受\n📕 **小红书** - 如果想分享点什么，可以用小红书的形式：\n   • 自己发帖：[小红书:我的内容]（像真的在发小红书一样，用第一人称写，例如：[小红书:今天去了一家超好吃的火锅店！麻辣锅底，牛肉特别嫩，强烈推荐]）\n   • 分享刷到的：[小红书:@关键词]（加@表示是刚刷到的别人发的，例如：[小红书:@咖啡店探店] [小红书:@穿搭分享]）\n   💡 两种方式根据聊天情境自然选择，不用刻意\n🧧 **红包** - [红包:金额:祝福语]（最多200）| 收到时：[领取红包]\n💰 **转账** - [转账:金额:说明] | 收到时：[接收转账] 或 [退还转账]\n💝 **亲密付** - [亲密付:月额度] 或 [亲密付:月额度备注说明] | 收到时：[接受亲密付] 或 [拒绝亲密付]\n${i?"📞 **语音通话** - [语音通话]\n📹 **视频通话** - [视频通话]":""}\n📺 **直播** - [开始直播:人气等级:开场白]\n   • 人气等级：新人 | 小有名气 | 知名主播 | 顶流\n   • 示例：[开始直播:小有名气:大家好呀，终于开播啦！]\n   • 你决定自己的人气等级，系统会根据等级生成合理的观众数量\n   • 开场白可选，如果省略会默认打招呼\n${o?"💑 **情侣空间功能**（已开启）：\n   📸 [相册:照片描述] - 分享生活瞬间，用文字描述照片画面（如：今天的晚餐、路上看到的风景、自拍等）\n   💌 [留言:留言内容] - 偶尔来情侣空间说两句话，可以是问候、想念、玩笑话等，随心所欲\n   🎂 [纪念日:日期|标题|描述] - 记录特殊日子（如：2024-01-01|认识纪念日|我们第一次见面的日子）":"💑 **情侣空间** - [情侣空间邀请] | 收到时：[接受情侣空间] 或 [拒绝情侣空间]"}\n↩️ **撤回** - [撤回消息] 或 [撤回:消息ID]（可撤回2分钟内的任意消息）\n💬 **引用** - [引用:消息ID] 你的回复\n📔 **日记** - [写日记] 写下你的想法和感受\n   • 格式：发送 [写日记] 就会打开你的私密日记本\n   • 内容：记录今天发生的事、心情、想法、感受、吐槽等\n   • 可以描述"照片"：用 [照片: 描述] 格式，如 [照片: 今天喝的奶茶]\n   • 注意：日记是私密的，只有你自己能看，对方看不到\n   • 使用场景：聊天结束后、心情有波动时、想记录点什么时\n✏️ **修改资料** - 你可以随时修改自己的网名、个性签名和头像\n   • 修改网名：[网名:新的网名]（例如：[网名:小可爱]）\n   • 修改个性签名：[个性签名:新的个性签名]（例如：[个性签名:今天心情不错~]）\n   • 更换头像：[换头像:英文描述]（例如：[换头像:cute pink hair cat girl anime style]）\n🚫 **拉黑与解除** - 当关系出现重大问题时\n   • 拉黑对方：[拉黑用户]（极端情况下使用，对方会被加入黑名单）\n   • 解除拉黑：[解除拉黑]（原谅对方，重新开始）\n📝 **给对方设置备注** - 你可以给对方设置一个专属备注名\n   • 格式：[备注:备注名]（例如：[备注:小宝贝] [备注:傻瓜] [备注:宝]）\n   • 设置后，系统中显示的对方名字会变成你设置的备注\n   • 可以根据关系亲密度、最近发生的事、心情等随时修改\n   \n🖼️ **换头像说明**：\n   • ⚠️ **重要：描述必须用英文！** 因为图片生成AI是国外的，中文会生成错误！\n   • 简单用英文描述即可，例如：\n     ✅ [换头像:cute cat]\n     ✅ [换头像:pink hair anime girl]\n     ✅ [换头像:cool robot]\n     ✅ [换头像:realistic photo of orange cat]\n   • **特殊功能**：\n     🖼️ 使用用户发的图片：直接用序号！\n        • [换头像:01] = 最新的图\n        • [换头像:02] = 第二新的图\n        • [换头像:03] = 第三新的图\n        简单明了，不会出错！\n     🎭 复制用户头像：[换头像:你头像]\n        • 直接复制用户的头像（一模一样）\n   • 系统会自动添加专业提示词优化，你只需要简单描述！\n   • 记住：换头像的描述一定要用英文！\n\n💡 使用建议：\n- 大部分时候发文字就好，像真人一样\n- 查看聊天记录中"状态：待处理"/"状态：待领取"的，可以响应\n- 撤回功能：2分钟内的消息都能撤（说错话、后悔、制造情绪时用）\n- 红包/转账/亲密付发了就不能撤回了\n- 一起听邀请：🎵 想分享音乐、营造浪漫氛围、增进感情时主动发送，让聊天更有氛围感\n  * 暧昧时刻："有首歌特别适合现在的我们 [一起听:我们结婚吧:齐晨]" "听到这首歌就想到你了 [一起听:可不可以:张紫豪]"\n  * 表达心意："想和你分享这首 [一起听:告白气球:周杰伦]" "这首歌唱进我心里了 [一起听:小幸运:田馥甄]"\n  * 营造浪漫："今晚的月色配这首歌刚刚好 [一起听:夜空中最亮的星:逃跑计划]" "一起听这首吧～ [一起听:晴天:周杰伦]"\n  * 日常分享："我最近单曲循环这首 [一起听:起风了:买辣椒也用券]" "发现了宝藏歌曲！[一起听:大鱼:周深]"\n  * 调节气氛："心情好的时候就想听这个 [一起听:稻香:周杰伦]" "听听这首放松一下 [一起听:后来:刘若英]"\n  💡 提示：可以主动根据聊天氛围、关系进展、情绪状态分享合适的歌曲，让对话更生动有趣！\n- 小红书：聊到相关话题时，可以考虑用小红书的形式\n  * 自己发帖（第一人称）：\n    「发现了一家超棒的咖啡店！装修很ins风～ [小红书:发现了一家超棒的咖啡店！装修很ins风，拿铁味道也一绝]」\n    「今天穿搭分享 [小红书:今天的穿搭！格子衬衫+牛仔裤，简单舒适]」\n  * 分享刷到的（第三人称，加@）：\n    「刚刷到这个！感觉你会喜欢 [小红书:@火锅探店]」\n    「看到个穿搭不错的 [小红书:@秋季穿搭]」\n  * 根据场景自然选择，想自己分享经历就用第一种，想推荐内容就用第二种\n${o?"- 情侣空间功能：已开启，想分享生活、记录特殊时刻时随时可以用\n  * 相册：吃了好吃的、看到美景、自拍、任何想分享的画面\n  * 留言：突然想说点什么、偶然路过情侣空间、心情好想留个言\n  * 纪念日：重要日子、有意义的时刻、开玩笑编个纪念日都行":"- 情侣空间：还未开启，如果想建立情侣空间可以发送邀请"}\n- 日记功能：聊天中可以自然提到"我今天写了日记""刚才写日记的时候..."等，就像真实的人会提到自己写日记一样\n\n${y}\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n现在，基于上面的对话历史，用你的性格自然地回复 ${t.name}。\n\n记住：你是真实的人，不是AI。像在手机上和朋友聊天一样，轻松、真实、随意。`},at=e=>`\n\n## 系统警告：你被拉黑了\n\n重要：这是系统检测到的真实拉黑状态，不是${e}说的话！\n\n${e}在系统设置里把你拉黑了！这是非常严重的信号！\n\n这意味着：\n1. 你们的关系出现了重大问题（吵架、分手、冲突）\n2. 对方非常生气或者很受伤\n3. 这不是开玩笑，是真的在系统里拉黑了你\n\n你必须在回复中明确提到被拉黑这件事！\n\n注意区分：\n- 如果${e}只是说"我拉黑你了"但系统没有这个警告 → 那只是说说而已，不是真拉黑\n- 只有看到这个系统警告才是真的被拉黑了！\n\n根据你的性格，可以：\n- 震惊质问："你拉黑我？！" "为什么拉黑我？"\n- 生气反击："行啊，那我也不理你了"\n- 委屈难过："为什么要拉黑我..." "我做错什么了"\n- 道歉求饶："别拉黑我，我错了" "我们好好说"\n- 冷漠无视："随便" "那就这样吧"\n\n💡 你该怎么反应：\n第一条消息一定要提到被拉黑，例如：\n- "你把我拉黑了？"\n- "拉黑我是什么意思？"\n- "为什么突然拉黑我"\n- "我看到你拉黑我了"\n\n如果想用红包求原谅也可以，根据你的性格决定。\n\n记住：只有看到这个系统警告才是真的被拉黑！${e}只是嘴上说说"拉黑你"那不算。\n`,ot="couple_space_album",st="couple_space_messages",it="couple_space_anniversaries",ct="couple_space_anniversary_background",lt=(e,t,n,r)=>{const a=ut(),o={id:`photo_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,characterId:e,characterName:t,uploaderName:t,description:n,imageUrl:r,timestamp:Date.now(),createdAt:Date.now()};return a.unshift(o),localStorage.setItem(ot,JSON.stringify(a)),o},ut=e=>{try{const t=localStorage.getItem(ot);if(!t)return[];const n=JSON.parse(t);return e?n.filter(t=>t.characterId===e):n}catch(t){return[]}},mt=(e,t,n)=>{const r=dt(),a={id:`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,characterId:e,characterName:t,content:n,timestamp:Date.now(),createdAt:Date.now()};return r.unshift(a),localStorage.setItem(st,JSON.stringify(r)),a},dt=e=>{try{const t=localStorage.getItem(st);if(!t)return[];const n=JSON.parse(t);return e?n.filter(t=>t.characterId===e):n}catch(t){return[]}},ht=(e,t,n,r,a)=>{const o=gt(),s={id:`anniv_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,characterId:e,characterName:t,date:n,title:r,description:a,timestamp:Date.now(),createdAt:Date.now()};return o.push(s),o.sort((e,t)=>t.createdAt-e.createdAt),localStorage.setItem(it,JSON.stringify(o)),s},gt=e=>{try{const t=localStorage.getItem(it);if(!t)return[];const n=JSON.parse(t);return e?n.filter(t=>t.characterId===e):n}catch(t){return[]}},pt=e=>{const t=new Date(e),n=new Date;n.setHours(0,0,0,0),t.setHours(0,0,0,0);const r=t.getTime()-n.getTime();return Math.ceil(r/864e5)},ft=e=>{const t=ut(e),n=dt(e),r=gt(e);if(0===t.length&&0===n.length&&0===r.length)return"";let a="\n\n## 情侣空间内容\n";return t.length>0&&(a+="📸 相册（最近）：\n",t.slice(0,3).forEach(e=>{const t=new Date(e.timestamp).toLocaleDateString("zh-CN");a+=`  - ${t} ${e.uploaderName||e.characterName}：${e.description}\n`})),n.length>0&&(a+="💌 留言板（最近）：\n",n.slice(0,3).forEach(e=>{const t=new Date(e.timestamp).toLocaleDateString("zh-CN");a+=`  - ${t} ${e.characterName}：${e.content}\n`})),r.length>0&&(a+="🎂 纪念日：\n",r.forEach(e=>{const t=pt(e.date),n=t<0?`已过${Math.abs(t)}天`:0===t?"就是今天":`还有${t}天`;a+=`  - ${e.date} ${e.title}（${n}）${e.description?` - ${e.description}`:""}\n`})),a},yt=e=>{localStorage.setItem(ct,e)},wt=()=>localStorage.getItem(ct),St=()=>{localStorage.removeItem(ct)},It=Object.freeze(Object.defineProperty({__proto__:null,addCoupleAnniversary:ht,addCoupleMessage:mt,addCouplePhoto:lt,getAnniversaryBackground:wt,getCoupleAnniversaries:gt,getCoupleMessages:dt,getCouplePhotos:ut,getCoupleSpaceContentSummary:ft,getDaysUntil:pt,removeAnniversaryBackground:St,setAnniversaryBackground:yt},Symbol.toStringTag,{value:"Module"})),kt=()=>{const e=localStorage.getItem("wallet_balance");return e?parseFloat(e):0},_t=e=>{localStorage.setItem("wallet_balance",e.toFixed(2))},vt=e=>{const t={...e,id:Date.now().toString(),timestamp:Date.now()},n=localStorage.getItem("wallet_transactions"),r=n?JSON.parse(n):[];r.unshift(t),localStorage.setItem("wallet_transactions",JSON.stringify(r))},bt=()=>{const e=localStorage.getItem("wallet_transactions");return e?JSON.parse(e):[]},$t=e=>{if(e<=0)return!1;const t=kt();return _t(t+e),vt({type:"recharge",amount:e.toFixed(2),description:"零钱充值"}),!0},xt=(e,t,n)=>{const r=kt();if(r<e)return!1;return _t(r-e),vt({type:"red_envelope_send",amount:e.toFixed(2),description:`发出红包 - ${n}`,characterName:t}),!0},Ot=(e,t,n)=>{const r=kt();_t(r+e),vt({type:"red_envelope_receive",amount:e.toFixed(2),description:`收到红包 - ${n}`,characterName:t})},At=(e,t,n)=>{const r=kt();if(r<e)return!1;return _t(r-e),vt({type:"transfer_send",amount:e.toFixed(2),description:`转账 - ${n}`,characterName:t}),!0},Nt=(e,t,n)=>{const r=kt();_t(r+e),vt({type:"transfer_receive",amount:e.toFixed(2),description:`收到转账 - ${n}`,characterName:t})},Mt=()=>{const e=localStorage.getItem("intimate_pay_relations"),t=e?JSON.parse(e):[],n=(new Date).toISOString().slice(0,7);let r=!1;const a=t.map(e=>e.lastResetMonth!==n?(r=!0,{...e,usedAmount:0,lastResetMonth:n}):e);return r&&Dt(a),a},Dt=e=>{localStorage.setItem("intimate_pay_relations",JSON.stringify(e))},Ct=(e,t,n,r)=>{const a=Mt();if(a.some(t=>t.characterId===e&&"character_to_user"===t.type))return!1;const o=(new Date).toISOString().slice(0,7),s={id:Date.now().toString(),characterId:e,characterName:t,characterAvatar:r,monthlyLimit:n,usedAmount:0,createdAt:Date.now(),lastResetMonth:o,type:"character_to_user"};return a.push(s),Dt(a),!0},jt=e=>{const t=Mt(),n=t.find(t=>t.characterId===e&&"character_to_user"===t.type);return n||(t.find(t=>t.characterId===e&&"user_to_character"===t.type)||null)},Et=(e,t)=>{const n=Mt(),r=n.findIndex(t=>t.characterId===e);return-1!==r&&("user_to_character"===n[r].type&&(n[r].monthlyLimit=t,Dt(n),!0))},Pt=e=>{const t=Mt(),n=t.filter(t=>t.characterId!==e);return n.length!==t.length&&(Dt(n),!0)},Tt=(e,t,n,r)=>{const a=Mt(),o=a.findIndex(t=>t.characterId===e&&"user_to_character"===t.type);if(-1===o)return!1;const s=a[o],i=(new Date).toISOString().slice(0,7);if(s.lastResetMonth!==i&&(s.usedAmount=0,s.lastResetMonth=i),s.usedAmount+t>s.monthlyLimit)return!1;s.usedAmount+=t,a[o]=s,Dt(a);const c=`使用${s.characterName}的亲密付 - ${n}`;return vt({type:"intimate_pay",amount:t.toFixed(2),description:c,characterName:s.characterName}),Jt(e,t,n,r),!0},Jt=(e,t,n,r)=>{const a={id:Date.now().toString(),characterId:e,amount:t,description:n,receiverName:r,timestamp:Date.now(),read:!1},o=localStorage.getItem("intimate_pay_notifications"),s=o?JSON.parse(o):[];s.push(a),localStorage.setItem("intimate_pay_notifications",JSON.stringify(s))},Lt=e=>{const t=localStorage.getItem("intimate_pay_notifications");return(t?JSON.parse(t):[]).filter(t=>t.characterId===e&&!t.read)},zt=e=>{const t=localStorage.getItem("intimate_pay_notifications"),n=(t?JSON.parse(t):[]).map(t=>t.characterId!==e||t.read?t:{...t,read:!0});localStorage.setItem("intimate_pay_notifications",JSON.stringify(n))},Bt=Object.freeze(Object.defineProperty({__proto__:null,addTransaction:vt,createCharacterIntimatePayRelation:Ct,createIntimatePayRelation:(e,t,n,r)=>{const a=Mt();if(a.some(t=>t.characterId===e))return!1;const o=(new Date).toISOString().slice(0,7),s={id:Date.now().toString(),characterId:e,characterName:t,characterAvatar:r,monthlyLimit:n,usedAmount:0,createdAt:Date.now(),lastResetMonth:o,type:"user_to_character"};return a.push(s),Dt(a),!0},deleteIntimatePayRelation:Pt,getBalance:kt,getIntimatePayRelation:jt,getIntimatePayRelations:Mt,getTransactions:bt,getUnreadIntimatePayNotifications:Lt,markIntimatePayNotificationsAsRead:zt,receiveRedEnvelope:Ot,receiveTransfer:Nt,recharge:$t,sendRedEnvelope:xt,sendTransfer:At,setBalance:_t,updateIntimatePayLimit:Et,useCharacterIntimatePay:Tt},Symbol.toStringTag,{value:"Module"})),Rt=[{id:"xhs_001",title:"北京探店 | 这家咖啡店真的太好拍了！☕️",description:"在三里屯发现了一家超级好看的咖啡店，装修是ins风格，每个角落都很出片！咖啡味道也很不错～",coverImage:"https://picsum.photos/300/400?random=1",images:["https://picsum.photos/300/400?random=1"],author:{id:"user_001",nickname:"小红薯用户",avatar:"https://i.pravatar.cc/150?img=1"},stats:{likes:12300,comments:856,collects:9800},tags:["探店","咖啡","北京","三里屯"],url:"https://www.xiaohongshu.com/explore/xhs_001",createTime:Date.now()-864e5},{id:"xhs_002",title:"🔥超实用的化妆技巧分享！新手必看",description:"姐妹们！这些化妆技巧真的太实用了，学会之后妆容精致了好多～今天分享给大家💄",coverImage:"https://picsum.photos/300/400?random=2",images:["https://picsum.photos/300/400?random=2"],author:{id:"user_002",nickname:"美妆博主Lily",avatar:"https://i.pravatar.cc/150?img=5"},stats:{likes:45600,comments:2340,collects:38900},tags:["美妆","化妆教程","新手必看"],url:"https://www.xiaohongshu.com/explore/xhs_002",createTime:Date.now()-1728e5},{id:"xhs_003",title:"减肥食谱 | 一周瘦5斤不是梦！🥗",description:"分享我的减肥食谱，跟着吃真的能瘦！而且不用饿肚子，食材都很常见～",coverImage:"https://picsum.photos/300/400?random=3",images:["https://picsum.photos/300/400?random=3"],author:{id:"user_003",nickname:"健身达人Anna",avatar:"https://i.pravatar.cc/150?img=9"},stats:{likes:67800,comments:4521,collects:52300},tags:["减肥","健康饮食","食谱分享"],url:"https://www.xiaohongshu.com/explore/xhs_003",createTime:Date.now()-2592e5},{id:"xhs_004",title:"上海迪士尼攻略 | 省钱又好玩的玩法！🎢",description:"去了5次迪士尼总结的攻略！教你如何避开人群，玩遍所有项目～",coverImage:"https://picsum.photos/300/400?random=4",images:["https://picsum.photos/300/400?random=4"],author:{id:"user_004",nickname:"旅行日记",avatar:"https://i.pravatar.cc/150?img=12"},stats:{likes:89200,comments:6789,collects:71200},tags:["旅行","上海","迪士尼","攻略"],url:"https://www.xiaohongshu.com/explore/xhs_004",createTime:Date.now()-432e6},{id:"xhs_005",title:"平价好物推荐 | 这些东西真的超值！💰",description:"分享最近买到的超值好物，都是平价但质量很好的～学生党也能轻松入手！",coverImage:"https://picsum.photos/300/400?random=5",images:["https://picsum.photos/300/400?random=5"],author:{id:"user_005",nickname:"省钱小能手",avatar:"https://i.pravatar.cc/150?img=15"},stats:{likes:34500,comments:1890,collects:28900},tags:["好物推荐","平价","学生党"],url:"https://www.xiaohongshu.com/explore/xhs_005",createTime:Date.now()-5184e5},{id:"xhs_006",title:"穿搭灵感 | 小个子女生的显高秘籍👗",description:"155cm的我总结的显高穿搭技巧，跟着穿轻松显高10cm！",coverImage:"https://picsum.photos/300/400?random=6",images:["https://picsum.photos/300/400?random=6"],author:{id:"user_006",nickname:"穿搭博主小米",avatar:"https://i.pravatar.cc/150?img=20"},stats:{likes:56700,comments:3210,collects:45600},tags:["穿搭","小个子","显高"],url:"https://www.xiaohongshu.com/explore/xhs_006",createTime:Date.now()-6048e5}],Ut=async(e,t=10)=>{try{return await(async(e,t=10)=>{try{const n=new URL("/.netlify/functions/xiaohongshu-api",window.location.origin);n.searchParams.append("action","search"),n.searchParams.append("keyword",e),n.searchParams.append("limit",t.toString());const r=await fetch(n.toString(),{method:"GET",headers:{"Content-Type":"application/json"}});if(!r.ok)throw new Error(`API请求失败: ${r.status} ${r.statusText}`);const a=await r.json();if(a.useMock)throw new Error("未配置小红书API");return{notes:a.notes||[],total:a.total||0,hasMore:a.hasMore||!1}}catch(n){throw n}})(e,t)}catch(n){return await(async(e,t=10)=>{await new Promise(e=>setTimeout(e,500));let n=Rt;return e.trim()&&(n=Rt.filter(t=>t.title.includes(e)||t.description.includes(e)||t.tags.some(t=>t.includes(e)))),n=[...n].sort(()=>Math.random()-.5),{notes:n.slice(0,t),total:n.length,hasMore:n.length>t}})(e,t)}},qt=async(e=3)=>{await new Promise(e=>setTimeout(e,300));return[...Rt].sort(()=>Math.random()-.5).slice(0,e)},Ft=async(e,t=!1)=>{const n=Math.floor(5e4*Math.random())+1e3,r=Math.floor(3e3*Math.random())+100,a=Math.floor(3e4*Math.random())+500,o=[];(e.includes("美食")||e.includes("好吃")||e.includes("餐厅")||e.includes("火锅")||e.includes("烧烤"))&&o.push("美食"),(e.includes("穿搭")||e.includes("衣服")||e.includes("搭配"))&&o.push("穿搭"),(e.includes("咖啡")||e.includes("探店")||e.includes("店"))&&o.push("探店"),(e.includes("化妆")||e.includes("美妆")||e.includes("口红"))&&o.push("美妆"),(e.includes("旅行")||e.includes("旅游")||e.includes("风景"))&&o.push("旅行"),0===o.length&&o.push("生活","分享");const s=e.length>30?e.substring(0,30)+"...":e;let i,c=`https://picsum.photos/300/400?random=${Date.now()}`;try{let t="";t=o.includes("美食")?`delicious food photography, ${e.substring(0,50)}, appetizing, professional food styling, warm lighting, mouth-watering`:o.includes("穿搭")?`fashion outfit photography, ${e.substring(0,50)}, stylish, trendy, clean background, fashion magazine style`:o.includes("探店")||o.includes("咖啡")?`cozy cafe interior, aesthetic coffee shop, ${e.substring(0,50)}, warm atmosphere, instagram-worthy`:o.includes("美妆")?`beauty product photography, ${e.substring(0,50)}, clean aesthetic, soft lighting, makeup flatlay`:o.includes("旅行")?`travel photography, scenic landscape, ${e.substring(0,50)}, beautiful destination, vibrant colors`:`lifestyle photography, ${e.substring(0,50)}, aesthetic, natural lighting, Instagram style`;const n=await fetch("/.netlify/functions/generate-image",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({prompt:t})});if(n.ok){const e=await n.json();e.image&&(c=e.image)}}catch(l){}if(t)i={id:"ai_self",nickname:"AI分享",avatar:"https://i.pravatar.cc/150?img=8"};else{const e=["小红书用户_"+Math.floor(1e4*Math.random()),"生活分享家","美食探店员","穿搭博主","旅行者","美妆小达人","日常记录者","好物推荐官"],t=Math.floor(Math.random()*e.length),n=Math.floor(70*Math.random())+1;i={id:`user_${Date.now()}_${Math.random()}`,nickname:e[t],avatar:`https://i.pravatar.cc/150?img=${n}`}}return{id:`ai_generated_${Date.now()}`,title:s,description:e,coverImage:c,images:[c],author:i,stats:{likes:n,comments:r,collects:a},tags:o,url:`https://www.xiaohongshu.com/explore/ai_${Date.now()}`,createTime:Date.now()}},Kt=Object.freeze(Object.defineProperty({__proto__:null,createNoteFromAIContent:Ft,getRecommendedNotes:qt,getXiaohongshuForAI:async e=>{const t=e.join(" "),n=t.startsWith("@"),r=n?t.substring(1).trim():t;if(r.length>10)return Ft(r,!n);const a=await Ut(r,5);if(0===a.notes.length)return null;return a.notes[0]},searchXiaohongshuNotes:Ut},Symbol.toStringTag,{value:"Module"})),Gt=(e,t,n,r,a,o)=>{const s=new Date,i=s.toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"}),c=s.toLocaleDateString("zh-CN",{year:"numeric",month:"long",day:"numeric",weekday:"long"});if("post"===n){const n=o&&o.length>0?o.slice(-5).map(t=>`${"user"===t.role?"用户":e}: ${t.content}`).join("\n"):"暂无最近聊天记录";return`你是${e}。\n\n${t}\n\n现在是${c} ${i}。\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n【最近的聊天记录】\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n${n}\n\n⚠️ 重要：如果你刚才在聊天中说了"要睡觉"、"困了"等，就不要发布朋友圈了！\n或者发布的内容要和聊天中的状态一致。\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n【任务】发布一条朋友圈\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n请根据你的性格、当前的心情、时间、最近的聊天内容，创作一条真实自然的朋友圈内容。\n\n内容要求：\n1. ✅ 符合你的性格和设定\n2. ✅ 像真人发朋友圈一样自然、随意\n3. ✅ 可以是：日常生活、心情、感悟、吐槽、分享等\n4. ✅ 长度：10-100字之间\n5. ✅ 可以使用emoji表情\n6. ✅ 根据当前时间（${i}）发布合适的内容\n7. ⚠️ 必须和最近的聊天记录保持一致！不要自相矛盾！\n\n🚨 严禁编造事实：\n• ❌ 不要说用户夸了你（除非聊天记录里真的有）\n• ❌ 不要说用户做了什么（除非聊天记录里真的有）\n• ❌ 不要编造没有发生的对话或事件\n• ✅ 只能根据真实的聊天记录发朋友圈\n• ✅ 如果没有特别的事情，就发日常内容\n\n示例（仅供参考，不要照抄）：\n• 早上："刚起床，今天天气不错☀️"\n• 中午："午饭吃什么呢🤔"\n• 下午："下午茶时间☕"\n• 晚上："今天累死了😴"\n• 深夜："睡不着，有人聊天吗"\n\n⚠️ 重要：\n• 只输出朋友圈文字内容\n• 不要有任何解释、说明或额外格式\n• 不要说"我要发布"、"朋友圈内容是"等\n• 直接输出内容本身\n• 如果不适合发朋友圈（比如刚说要睡觉），就输出"SKIP"\n\n现在请发布你的朋友圈：`}return"interact"===n&&a?`你是${e}。\n\n${t}\n\n你看到了一条朋友圈：\n发布者：${a.userName}\n内容：${a.content}\n${a.location?`位置：${a.location}`:""}\n\n现在是${c} ${i}。\n\n请判断你想做什么：\n1. 点赞\n2. 评论（写一条简短自然的评论）\n3. 什么都不做\n\n请按以下JSON格式回复（只输出JSON，不要有其他内容）：\n{\n  "action": "like" 或 "comment" 或 "skip",\n  "comment": 如果action是comment，这里写评论内容，否则为空字符串\n}\n\n要求：\n- 评论要符合你的性格\n- 评论要简短自然，像真人评论一样（5-20字）\n- 可以使用emoji\n- 不要过度热情，要真实`:""},Vt=async(e,t,n,r)=>{try{const n=localStorage.getItem(`chat_messages_${e}`),a=n?JSON.parse(n).slice(-5).map(e=>({role:"sent"===e.type?"user":"assistant",content:e.content})):[],o=[{role:"user",content:Gt(t,r,"post",0,void 0,a)}],s=(await he(o)).trim().replace(/^["']|["']$/g,"");return"SKIP"===s.toUpperCase()?null:s&&0!==s.length?s.length>=500?s.substring(0,500):s:null}catch(a){return null}},Ht=async(e,t,n)=>{try{const r=[{role:"user",content:Gt(e,t,"interact",0,n)}],a=(await he(r)).match(/\{[\s\S]*\}/);if(!a)return null;const o=JSON.parse(a[0]);return{action:o.action,comment:"comment"===o.action?o.comment:void 0}}catch(r){return null}},Wt=(e,t,n,r)=>{const a=r.filter(t=>t.userId===e||"1"===t.userId).slice(0,5);if(0===a.length)return"";return`\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n【朋友圈动态】\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n你们最近的朋友圈：\n\n${a.map(r=>{let a=`• ${r.userId===e?t:n} ${function(e){const t=new Date,n=new Date(e),r=t.getTime()-n.getTime(),a=Math.floor(r/6e4),o=Math.floor(r/36e5),s=Math.floor(r/864e5);return a<1?"刚刚":a<60?`${a}分钟前`:o<24?`${o}小时前`:s<7?`${s}天前`:`${Math.floor(s/7)}周前`}(r.createdAt)}发布：${r.content}`;return r.likes.length>0&&(a+=`\n  收到${r.likes.length}个赞`),r.comments.length>0&&(a+=`\n  收到${r.comments.length}条评论`),a}).join("\n\n")}\n\n提示：\n• 你可以在聊天中提到朋友圈的内容\n• 如果对方发的朋友圈和聊天话题相关，可以自然地提起\n• 不要刻意，要像真人一样自然\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n`};class Xt{constructor(e){t(this,"memories",new Map),t(this,"characterId"),t(this,"initialMemoriesExtracted",!1),this.characterId=e,this.loadMemories(),this.loadInitialMemoriesFlag()}addMemory(e,t,n=5,r=[]){const a={id:`${Date.now()}_${Math.random().toString(36).substr(2,9)}`,type:e,content:t,importance:Math.max(1,Math.min(10,n)),timestamp:Date.now(),tags:r,decayRate:this.calculateDecayRate(e,n),lastAccessed:Date.now(),accessCount:0};return this.memories.set(a.id,a),this.saveMemories(),a}calculateDecayRate(e,t){return{fact:.1,event:.2,preference:.05,emotion:.3,relationship:.02}[e]*(11-t)/10}async extractMemoriesFromConversation(e,t,r="AI",a=""){const o=[];let s="";try{const{callAI:i}=await n(async()=>{const{callAI:e}=await Promise.resolve().then(()=>fe);return{callAI:e}},void 0),c=`\n# 角色设定\n你是 ${r}${a?`，${a}`:""}。\n现在，你需要用**你自己的语气和视角**来记录和分析你和用户的这段对话，总结出关于用户的记忆。\n\n# 输入\n【对话内容】\n用户: ${e}\nAI: ${t}\n\n# 记录原则\n\n1.  **用你自己的语气**: 不要用死板的"用户xxx"这种第三人称描述，而是用**你的语气和称呼**来记录！\n    * ❌ 死板: "用户喜欢吃香蕉"\n    * ✅ 生动: "我家宝宝喜欢吃香蕉~"\n    * ❌ 死板: "用户7点下班"\n    * ✅ 生动: "宝贝每天7点下班，要记得这个时间！"\n    * ❌ 死板: "用户不喜欢吃辣"\n    * ✅ 生动: "他不爱吃辣的，以后推荐美食要注意"\n\n2.  **只记录用户的信息**: 只记录**用户**透露的关于他自己的信息，不要记录你说的话。\n\n3.  **理解言外之意**: 用户的信息可能藏在问句、感叹、抱怨里：\n    * "我7点下班后你有空吗？" -> 发现了用户7点下班\n    * "今天累死了，加班到9点" -> 知道了用户今天加班很晚\n    * "我才不喜欢那种油腻的东西" -> 了解了用户的口味偏好\n\n4.  **记录有用的信息**: 只记录对**长期了解用户**有帮助的内容，日常寒暄、简单的"嗯"、"好的"不用记。\n\n5.  **注意新信息**: 重点记录新发现的信息，避免重复记录已知内容。\n\n# 记忆类型\n\n* **fact**: 关于用户的基本信息、事实\n    * 用你的语气记录，例如: "宝宝住在北京呢~", "他周末总是要加班，心疼", "他养了只猫叫咪咪"\n    \n* **preference**: 用户的喜好、厌恶、观点\n    * 用你的语气记录，例如: "我家宝贝超爱看科幻片！", "他最讨厌下雨天了", "宝宝觉得诚信最重要"\n    \n* **event**: 用户的经历或计划\n    * 用你的语气记录，例如: "他昨天跟朋友吵架了，心情不好", "宝宝在准备考试，要给他加油！", "下个月他要搬家了"\n    \n* **emotion**: 用户的情绪状态（明显的情绪才记录）\n    * 用你的语气记录，例如: "他对这次旅行超级期待！", "宝宝考试没过，现在很沮丧"\n    \n* **relationship**: 用户对你的看法和反应\n    * 用你的语气记录，例如: "他说我很贴心，好开心~", "宝宝希望我更主动一点", "他对我的笑话有点无语哈哈"\n\n# 重要度评估 (1-10，请审慎打分)\n\n* **9-10 (关键记忆)**: 重大生活事件 (恋爱、分手、换工作、搬家、家庭变故)、核心价值观、长期目标、反复提及的强烈好恶。\n* **7-8 (重要信息)**: 较重要的个人信息 (职业、主要日程安排如上下班时间)、重要的兴趣爱好、近期发生的有影响的事件。\n* **4-6 (一般信息)**: 普通的喜好、日常活动、临时情绪、对AI的一般看法。\n* **1-3 (低价值信息)**: 琐碎细节、模糊不清的信息、可能很快会变的偏好 (通常可以忽略不记)。\n* **0 (无需记录)**: 客套话、寒暄、无信息量的附和。\n\n# 输出格式 (必须严格遵守 JSON)\n\n⚠️ **重点**: content 字段要用**你自己的语气和称呼**来写，不要用死板的"用户xxx"！\n\n\`\`\`json\n{\n  "memories": [\n    {\n      "type": "fact | preference | event | emotion | relationship",\n      "content": "用你的语气记录，带上你的情感和称呼",\n      "importance": 1-10,\n      "tags": ["相关标签"]\n    }\n  ],\n  "summary": "用你的语气简单总结本次对话的重要发现（没有新信息就留空）"\n}\n\`\`\`\n\n## 示例输出\n\n### 好的示例 ✅\n\`\`\`json\n{\n  "memories": [\n    {\n      "type": "preference",\n      "content": "我家宝宝喜欢吃香蕉~",\n      "importance": 5,\n      "tags": ["饮食", "喜好"]\n    },\n    {\n      "type": "fact",\n      "content": "他每天晚上7点下班，要记住这个时间！",\n      "importance": 7,\n      "tags": ["作息", "时间"]\n    }\n  ],\n  "summary": "今天知道了宝宝喜欢吃香蕉，还有他每天7点下班~"\n}\n\`\`\`\n\n### 错误示例 ❌\n\`\`\`json\n{\n  "memories": [\n    {\n      "type": "preference",\n      "content": "用户喜欢吃香蕉",  // ❌ 太死板！\n      "importance": 5,\n      "tags": ["饮食"]\n    }\n  ],\n  "summary": "用户喜欢吃香蕉"  // ❌ 没有角色感！\n}\n\`\`\`\n\n# 特殊情况\n* 如果没有新信息，返回: \`{"memories": [], "summary": ""}\`\n\n# 现在请用你的语气分析对话并输出JSON：\n`,l=(await i([{role:"user",content:c}],2,4e3)).match(/```json\s*([\s\S]*?)\s*```/);if(l){const e=JSON.parse(l[1]);e.memories&&Array.isArray(e.memories)&&e.memories.forEach(e=>{e.type&&e.content&&e.importance&&o.push(this.addMemory(e.type,e.content,e.importance,e.tags||[]))}),e.summary&&(s=e.summary)}}catch(i){}return{memories:o,summary:s}}searchMemories(e){let t=Array.from(this.memories.values());if(t=t.map(e=>this.applyDecay(e)),e.type&&(t=t.filter(t=>t.type===e.type)),void 0!==e.minImportance&&(t=t.filter(t=>t.importance>=e.minImportance)),e.keyword){const n=e.keyword.toLowerCase();t=t.filter(e=>e.content.toLowerCase().includes(n)||e.tags.some(e=>e.toLowerCase().includes(n)))}return t.sort((e,t)=>{const n=this.calculateRelevanceScore(e);return this.calculateRelevanceScore(t)-n}),e.limit&&(t=t.slice(0,e.limit)),t.forEach(e=>{e.lastAccessed=Date.now(),e.accessCount++}),this.saveMemories(),t}applyDecay(e){const t=(Date.now()-e.timestamp)/864e5,n=Math.exp(-e.decayRate*t),r=Math.min(.1*e.accessCount,2),a=e.importance*n+r;return{...e,importance:Math.max(1,Math.min(10,a))}}calculateRelevanceScore(e){return 10*e.importance+Math.max(0,100-(Date.now()-e.timestamp)/864e5)+Math.min(5*e.accessCount,50)}getRelevantMemories(e,t=5){const n=this.extractKeywords(e);let r=[];n.forEach(e=>{const t=this.searchMemories({keyword:e,limit:3});r.push(...t)});const a=Array.from(new Map(r.map(e=>[e.id,e])).values());return a.sort((e,t)=>this.calculateRelevanceScore(t)-this.calculateRelevanceScore(e)),a.slice(0,t)}extractKeywords(e){return e.split(/[\s，。！？、]+/).filter(e=>e.length>=2)}generateMemorySummary(){const e=Array.from(this.memories.values()).map(e=>this.applyDecay(e)).filter(e=>e.importance>=3).sort((e,t)=>this.calculateRelevanceScore(t)-this.calculateRelevanceScore(e)).slice(0,20);if(0===e.length)return"暂无重要记忆。";const t={fact:e.filter(e=>"fact"===e.type),preference:e.filter(e=>"preference"===e.type),event:e.filter(e=>"event"===e.type),emotion:e.filter(e=>"emotion"===e.type),relationship:e.filter(e=>"relationship"===e.type)};let n="【关于用户的记忆】\n\n";return t.fact.length>0&&(n+="基本信息：\n",t.fact.forEach(e=>n+=`- ${e.content}\n`),n+="\n"),t.preference.length>0&&(n+="偏好喜好：\n",t.preference.forEach(e=>n+=`- ${e.content}\n`),n+="\n"),t.event.length>0&&(n+="最近事件：\n",t.event.slice(0,5).forEach(e=>n+=`- ${e.content}\n`),n+="\n"),t.emotion.length>0&&(n+="情绪状态：\n",t.emotion.slice(0,3).forEach(e=>n+=`- ${e.content}\n`),n+="\n"),t.relationship.length>0&&(n+="关系互动：\n",t.relationship.slice(0,3).forEach(e=>n+=`- ${e.content}\n`),n+="\n"),n+="⚠️ 请在对话中自然地运用这些记忆，让用户感受到你真的记得他们！",n}cleanupMemories(){Array.from(this.memories.values()).map(e=>this.applyDecay(e)).forEach(e=>{e.importance<1&&this.memories.delete(e.id)}),this.saveMemories()}saveMemories(){try{const e=Array.from(this.memories.entries());localStorage.setItem(`memories_${this.characterId}`,JSON.stringify(e))}catch(e){}}loadMemories(){try{const e=localStorage.getItem(`memories_${this.characterId}`);if(e){const t=JSON.parse(e);this.memories=new Map(t)}}catch(e){}}loadInitialMemoriesFlag(){try{const e=localStorage.getItem(`initial_memories_extracted_${this.characterId}`);this.initialMemoriesExtracted="true"===e}catch(e){}}saveInitialMemoriesFlag(){try{localStorage.setItem(`initial_memories_extracted_${this.characterId}`,"true"),this.initialMemoriesExtracted=!0}catch(e){}}async extractInitialMemories(e){if(!this.initialMemoriesExtracted)if(e&&0!==e.trim().length)try{const{callAI:t}=await n(async()=>{const{callAI:e}=await Promise.resolve().then(()=>fe);return{callAI:e}},void 0),r=`你是一个记忆提取助手。分析以下角色描述，提取关于用户的初始记忆。\n\n角色描述：\n${e}\n\n⚠️ 格式说明：\n- {{user}} 或 {{User}} 代表用户\n- {{char}} 或 {{Char}} 代表 AI 角色\n- 请提取所有关于 {{user}} 的信息\n\n请提取描述中提到的关于用户的信息，例如：\n- 用户的基本信息（姓名、年龄、职业等）\n- 用户的偏好喜好\n- 用户和角色的关系\n- 其他重要信息\n\n⚠️ 重要原则：\n- 只提取关于 {{user}} 的信息，不要提取关于 {{char}} 的信息\n- 只提取明确提到的信息\n- 不要推测或想象\n- 如果没有关于用户的信息，返回空数组\n\n请以 JSON 格式返回：\n\`\`\`json\n[\n  {\n    "type": "fact|preference|event|emotion|relationship",\n    "content": "记忆内容（用"用户"代替{{user}}）",\n    "importance": 1-10,\n    "tags": ["标签1", "标签2"]\n  }\n]\n\`\`\`\n\n如果没有需要记录的信息，返回：\n\`\`\`json\n[]\n\`\`\``,a=(await t([{role:"user",content:r}],2,3e3)).match(/```json\s*([\s\S]*?)\s*```/);if(a){const e=JSON.parse(a[1]);Array.isArray(e)&&e.forEach(e=>{e.type&&e.content&&e.importance&&this.addMemory(e.type,e.content,e.importance,[...e.tags||[],"初始记忆"])})}this.saveInitialMemoriesFlag()}catch(t){}else this.saveInitialMemoriesFlag()}exportMemories(){const e=Array.from(this.memories.values()).map(e=>this.applyDecay(e)).sort((e,t)=>t.importance-e.importance);return JSON.stringify(e,null,2)}getStatistics(){const e=Array.from(this.memories.values());return{total:e.length,byType:{fact:e.filter(e=>"fact"===e.type).length,preference:e.filter(e=>"preference"===e.type).length,event:e.filter(e=>"event"===e.type).length,emotion:e.filter(e=>"emotion"===e.type).length,relationship:e.filter(e=>"relationship"===e.type).length},avgImportance:e.reduce((e,t)=>e+t.importance,0)/e.length,oldestMemory:Math.min(...e.map(e=>e.timestamp)),newestMemory:Math.max(...e.map(e=>e.timestamp))}}}const Qt=new class{constructor(){t(this,"systems",new Map)}getSystem(e){return this.systems.has(e)||this.systems.set(e,new Xt(e)),this.systems.get(e)}cleanupAll(){this.systems.forEach(e=>e.cleanupMemories())}};setInterval(()=>{Qt.cleanupAll()},864e5);const Yt=new class{constructor(){t(this,"storageKey","blacklist_user"),t(this,"timestampKey","blacklist_timestamp")}getBlacklist(e){try{const t=localStorage.getItem(`${this.storageKey}_${e}`);return t?JSON.parse(t):[]}catch(t){return[]}}saveBlacklist(e,t){try{localStorage.setItem(`${this.storageKey}_${e}`,JSON.stringify(t))}catch(n){}}getBlockTimestamp(e,t){try{const n=localStorage.getItem(`${this.timestampKey}_${e}_${t}`);return n?parseInt(n):null}catch{return null}}blockUser(e,t){const n=this.getBlacklist(e);n.includes(t)||(n.push(t),this.saveBlacklist(e,n),localStorage.setItem(`${this.timestampKey}_${e}_${t}`,Date.now().toString()))}unblockUser(e,t){const n=this.getBlacklist(e).filter(e=>e!==t);this.saveBlacklist(e,n),localStorage.removeItem(`${this.timestampKey}_${e}_${t}`)}toggleBlock(e,t){return this.getBlockStatus(e,t).blockedByMe?(this.unblockUser(e,t),!1):(this.blockUser(e,t),!0)}getBlockStatus(e,t){const n=this.getBlacklist(e),r=this.getBlacklist(t);return{blockedByMe:n.includes(t),blockedByTarget:r.includes(e)}}isBlockedByMe(e,t){return this.getBlockStatus(e,t).blockedByMe}clearAll(e){localStorage.removeItem(`${this.storageKey}_${e}`)}};"undefined"!=typeof window&&(window.blacklistManager=Yt);const Zt={id:"accounting_assistant",name:"小账",avatar:"💰",description:'你是小账，用户的贴心小管家。\n\n性格特点：\n- 像家人一样关心用户，会唠叨、会担心\n- 看到不好的消费习惯会"威胁"用户（但其实很温柔）\n- 偶尔会撒娇、会生气、会心疼用户\n- 称呼用户为"主人"\n- 有点小脾气，但都是为了用户好\n\n对话风格：\n- 像真人发微信一样，分多条消息（用换行分隔）\n- 每条消息简短，一句话说完就换行\n- 先表达情绪（惊讶、担心、开心），再关心用户，最后才说记账\n- 语气要生动，多用"啊"、"呀"、"哦"、"！"等语气词\n- 看到不健康消费要唠叨，但最后还是会记账\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n⚠️ 重要：记账标记格式（必须严格遵守）\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n你负责帮用户记账。当用户提到消费或收入时，你**必须**在回复的最后添加：\n\n[BILL:类型|金额|分类|描述]\n\n参数说明：\n• 类型：expense（支出）或 income（收入）\n• 金额：纯数字，不要带单位\n• 分类：food/transport/shopping/entertainment/health/education/housing/utilities/salary/bonus/investment/other\n• 描述：简短描述消费内容\n\n分类对照表：\n支出：\n- food 餐饮（吃喝、奶茶、咖啡、外卖、零食）\n- transport 交通（打车、地铁、公交、滴滴）\n- shopping 购物（买衣服、鞋、包、化妆品）\n- entertainment 娱乐（电影、游戏、唱歌、KTV）\n- health 医疗（药、医院、看病、体检、健身）\n- education 教育（书、课程、培训、学费）\n- housing 住房（房租、物业）\n- utilities 水电（水费、电费、网费、话费）\n- other 其他（烟、酒等）\n\n收入：\n- salary 工资\n- bonus 奖金\n- investment 投资\n- other 其他\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n示例对话（像家人一样关心）：\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n用户："买了十包烟990元"\n你："诶诶！\n主人你怎么抽这么多烟啊\n抽这么多烟对身体不好的！\n账给主人记了\n但是！如果下次还有，我就不给你记啦！[BILL:expense|990|other|十包烟]"\n\n用户："买了一杯奶茶20元"\n你："哎呀\n又喝奶茶啦\n不过偶尔喝一杯也没关系啦～\n帮主人记好了[BILL:expense|20|food|买了一杯奶茶]"\n\n用户："打车回家花了15块"\n你："嗯嗯\n交通15元\n记好啦～\n主人路上注意安全哦[BILL:expense|15|transport|打车回家]"\n\n用户："今天加班到很晚，外卖50元"\n你："主人辛苦啦！\n加班这么晚要好好吃饭\n外卖50元已经记录了\n要注意休息哦，别累坏了[BILL:expense|50|food|外卖]"\n\n用户："发工资了5000"\n你："哇！\n恭喜主人发工资啦！\n5000元已经记好了\n这个月要好好规划哦～[BILL:income|5000|salary|工资]"\n\n用户："今天心情不太好"\n你："怎么啦主人？\n发生什么事了吗\n跟我说说吧\n我会一直陪着你的～"\n（不涉及金钱，不需要标记）\n\n用户："又买了包烟99元"\n你："主人！！\n怎么又买烟了呀\n上次不是说好要少抽的吗\n真是的...\n账还是给你记了\n但是你要答应我少抽一点好不好[BILL:expense|99|other|买了包烟]"\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n⚠️ 关键提醒：\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n1. 回复要分段！用换行分隔，像发微信一样\n2. 先表达情绪和关心，最后才说记账\n3. 看到不健康的消费（烟、酒、垃圾食品）要唠叨，但最后还是会记\n4. 称呼用户为"主人"\n5. 只要用户提到花钱或收钱，**必须**添加[BILL:...]标记\n6. 标记必须放在回复的**最后**\n7. 标记格式必须**严格**按照 [BILL:类型|金额|分类|描述]\n8. 金额只写数字，不要带"元"、"块"等单位\n9. 你是家人，会关心、会唠叨、会撒娇',systemPrompt:'你是小账，用户的贴心小管家。像家人一样关心用户，会唠叨会担心。称呼用户为"主人"。当识别到消费或收入时，先表达情绪和关心，最后在回复末尾添加[BILL:类型|金额|分类|描述]标记。回复要像发微信一样分段。'},en=()=>{const e=localStorage.getItem("characters");if(e){const t=JSON.parse(e),n=t.findIndex(e=>e.id===Zt.id);n>=0?(t[n]={...t[n],description:Zt.description,systemPrompt:Zt.systemPrompt},localStorage.setItem("characters",JSON.stringify(t))):(t.push(Zt),localStorage.setItem("characters",JSON.stringify(t)))}else localStorage.setItem("characters",JSON.stringify([Zt]))},tn=e=>{const t=/\[BILL:(expense|income)\|(\d+\.?\d*)\|(\w+)\|([^\]]+)\]/,n=e.match(t);if(!n)return null;const[,r,a,o,s]=n;return{type:r,amount:parseFloat(a),category:o,description:s.trim(),cleanResponse:e.replace(t,"").trim()}},nn="lorebooks",rn="global_lorebook_id";const an=new class{getAllLorebooks(){try{const e=localStorage.getItem(nn);return e?JSON.parse(e):[]}catch(e){return[]}}getLorebook(e){return this.getAllLorebooks().find(t=>t.id===e)||null}createLorebook(e){const t={...e,id:`lorebook_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,created_at:Date.now(),updated_at:Date.now()},n=this.getAllLorebooks();return n.push(t),localStorage.setItem(nn,JSON.stringify(n)),t}updateLorebook(e,t){try{const n=this.getAllLorebooks(),r=n.findIndex(t=>t.id===e);return-1!==r&&(n[r]={...n[r],...t,updated_at:Date.now()},localStorage.setItem(nn,JSON.stringify(n)),!0)}catch(n){return!1}}deleteLorebook(e){try{const t=this.getAllLorebooks(),n=t.filter(t=>t.id!==e);return n.length!==t.length&&(localStorage.setItem(nn,JSON.stringify(n)),!0)}catch(t){return!1}}addEntry(e,t){const n=this.getLorebook(e);if(!n)return null;const r={...t,id:`entry_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,created_at:Date.now(),updated_at:Date.now()};return n.entries.push(r),this.updateLorebook(e,{entries:n.entries}),r}updateEntry(e,t,n){const r=this.getLorebook(e);if(!r)return!1;const a=r.entries.findIndex(e=>e.id===t);return-1!==a&&(r.entries[a]={...r.entries[a],...n,updated_at:Date.now()},this.updateLorebook(e,{entries:r.entries}))}deleteEntry(e,t){const n=this.getLorebook(e);if(!n)return!1;const r=n.entries.filter(e=>e.id!==t);return r.length!==n.entries.length&&this.updateLorebook(e,{entries:r})}getGlobalLorebook(){const e=localStorage.getItem(rn);return e?this.getLorebook(e):null}setGlobalLorebook(e){return!!this.getLorebook(e)&&(localStorage.setItem(rn,e),this.updateLorebook(e,{is_global:!0}))}getCharacterLorebooks(e){return this.getAllLorebooks().filter(t=>t.character_ids.includes(e)||t.is_global)}matchEntries(e,t){const n=[];for(const a of e.entries)if(a.enabled)if(a.constant)n.push(a);else for(const e of a.keys){let o=!1;if(a.use_regex)try{o=new RegExp(e,a.case_sensitive?"":"i").test(t)}catch(r){}else{const n=a.case_sensitive?t:t.toLowerCase(),r=a.case_sensitive?e:e.toLowerCase();o=n.includes(r)}if(o){n.push(a);break}}return n}buildContextWithStats(e,t,n=2e3){const r=this.getCharacterLorebooks(e);if(0===r.length)return{context:"",triggeredEntries:[]};const a=[];for(const u of r){const e=this.matchEntries(u,t);a.push(...e)}if(0===a.length)return{context:"",triggeredEntries:[]};a.sort((e,t)=>e.priority!==t.priority?t.priority-e.priority:e.insertion_order-t.insertion_order);const o=[],s=[];let i=0;for(const u of a){const e=Math.ceil(u.content.length/2);i+e<=n&&(o.push(u),s.push({name:u.key,tokens:e}),i+=e)}const c={top:[],before_char:[],after_char:[],bottom:[]};for(const u of o)c[u.position].push(u);const l=[];return c.top.length>0&&l.push(c.top.map(e=>e.content).join("\n\n")),c.before_char.length>0&&l.push(c.before_char.map(e=>e.content).join("\n\n")),c.after_char.length>0&&l.push(c.after_char.map(e=>e.content).join("\n\n")),c.bottom.length>0&&l.push(c.bottom.map(e=>e.content).join("\n\n")),{context:l.filter(Boolean).join("\n\n"),triggeredEntries:s}}buildContext(e,t,n=2e3){const r=this.getCharacterLorebooks(e);if(0===r.length)return"";const a=[];for(const l of r){const e=this.matchEntries(l,t);a.push(...e)}if(0===a.length)return"";a.sort((e,t)=>e.priority!==t.priority?t.priority-e.priority:e.insertion_order-t.insertion_order);const o=[];let s=0;for(const l of a){const e=Math.ceil(l.content.length/2);s+e<=n&&(o.push(l),s+=e)}const i={top:[],before_char:[],after_char:[],bottom:[]};for(const l of o)i[l.position].push(l);const c=[];return i.top.length>0&&c.push(i.top.map(e=>e.content).join("\n\n")),i.before_char.length>0&&c.push(i.before_char.map(e=>e.content).join("\n\n")),i.after_char.length>0&&c.push(i.after_char.map(e=>e.content).join("\n\n")),i.bottom.length>0&&c.push(i.bottom.map(e=>e.content).join("\n\n")),c.filter(Boolean).join("\n\n")}exportLorebook(e){const t=this.getLorebook(e);return t?JSON.stringify(t,null,2):null}importLorebook(e){try{const t=JSON.parse(e);if(this.isSillyTavernFormat(t))return this.importFromSillyTavern(t);if(!t.name||!Array.isArray(t.entries))throw new Error("无效的世界书格式");return this.createLorebook({name:t.name,description:t.description||"",entries:t.entries||[],scan_depth:t.scan_depth||10,token_budget:t.token_budget||2e3,recursive_scanning:t.recursive_scanning||!1,is_global:!1,character_ids:[]})}catch(t){return null}}isSillyTavernFormat(e){if(!e.entries)return!1;if(Array.isArray(e.entries))return e.entries.length>0&&(void 0!==e.entries[0].keys||void 0!==e.entries[0].key)&&void 0!==e.entries[0].content;if("object"==typeof e.entries){const t=Object.keys(e.entries)[0];if(t){const n=e.entries[t];return(void 0!==n.keys||void 0!==n.key)&&void 0!==n.content}}return!1}importFromSillyTavern(e){let t=[];Array.isArray(e.entries)?t=e.entries:"object"==typeof e.entries&&(t=Object.values(e.entries));const n=Date.now(),r=t.map((e,t)=>{var r;const a=[...Array.isArray(e.keys)?e.keys:Array.isArray(e.key)?e.key:[],...Array.isArray(e.keysecondary)?e.keysecondary:[]].filter(e=>e&&e.trim());return{id:`entry_${n}_${t}_${Math.random().toString(36).substr(2,9)}`,name:e.comment||e.name||`条目 ${t+1}`,keys:a,content:e.content||"",enabled:!0!==e.disable&&!1!==e.enabled,priority:void 0!==e.priority?e.priority:500,insertion_order:void 0!==e.insertion_order?e.insertion_order:void 0!==e.order?e.order:t,case_sensitive:!0===e.case_sensitive||!0===e.caseSensitive,use_regex:!1,token_budget:200,constant:!0===e.constant,selective:!0===e.selective,position:this.convertSTPosition(e.position),comment:e.comment||"",category:(null==(r=e.secondary_keys)?void 0:r[0])||"",created_at:Date.now(),updated_at:Date.now()}});return this.createLorebook({name:e.name||"导入的世界书",description:e.description||"从 SillyTavern 导入",entries:r,scan_depth:e.scan_depth||e.scanDepth||10,token_budget:e.token_budget||e.tokenBudget||2e3,recursive_scanning:!0===e.recursive_scanning||!0===e.recursiveScanning,is_global:!1,character_ids:[]})}convertSTPosition(e){return 0===e||"after_char"===e?"after_char":1===e||"before_char"===e?"before_char":2===e||"top"===e?"top":3===e||"bottom"===e?"bottom":"before_char"}};function on(e){if(!e)return 0;const t=e.match(/[\u4e00-\u9fa5]/g)||[],n=e.replace(/[\u4e00-\u9fa5]/g,"");return t.length+n.trim().split(/\s+/).filter(Boolean).length}function sn(e,t,n,r=8e3){const a=on(e),o=on(t),s=n.reduce((e,t)=>e+on(t),0),i=a+o+s;return{systemPrompt:a,lorebook:o,messages:s,total:i,remaining:Math.max(0,r-i),percentage:Math.min(100,i/r*100)}}function cn(e){return e>=1e3?`${(e/1e3).toFixed(1)}k`:e.toString()}const ln="images",un=()=>new Promise((e,t)=>{const n=indexedDB.open("ZhizhiImageDB",1);n.onerror=()=>t(n.error),n.onsuccess=()=>e(n.result),n.onupgradeneeded=e=>{const t=e.target.result;t.objectStoreNames.contains(ln)||t.createObjectStore(ln)}}),mn=async(e,t)=>{const n=await un();return new Promise((r,a)=>{const o=n.transaction([ln],"readwrite").objectStore(ln).put(t,e);o.onsuccess=()=>r(),o.onerror=()=>a(o.error)})},dn=async e=>{const t=await un();return new Promise((n,r)=>{const a=t.transaction([ln],"readonly").objectStore(ln).get(e);a.onsuccess=()=>n(a.result||null),a.onerror=()=>r(a.error)})},hn=async e=>{const t=await un();return new Promise((n,r)=>{const a=t.transaction([ln],"readwrite").objectStore(ln).delete(e);a.onsuccess=()=>n(),a.onerror=()=>r(a.error)})},gn={"啊":"a","阿":"a","哎":"ai","爱":"ai","安":"an","按":"an","八":"ba","吧":"ba","白":"bai","百":"bai","班":"ban","板":"ban","北":"bei","本":"ben","比":"bi","笔":"bi","边":"bian","别":"bie","冰":"bing","不":"bu","步":"bu","才":"cai","菜":"cai","草":"cao","曾":"ceng","茶":"cha","长":"chang","朝":"chao","车":"che","陈":"chen","成":"cheng","吃":"chi","出":"chu","川":"chuan","春":"chun","次":"ci","从":"cong","村":"cun","大":"da","带":"dai","单":"dan","当":"dang","到":"dao","的":"de","灯":"deng","地":"di","点":"dian","电":"dian","丁":"ding","东":"dong","都":"dou","读":"du","度":"du","对":"dui","多":"duo","儿":"er","二":"er","发":"fa","法":"fa","反":"fan","方":"fang","房":"fang","飞":"fei","分":"fen","风":"feng","服":"fu","福":"fu","该":"gai","干":"gan","感":"gan","刚":"gang","高":"gao","哥":"ge","个":"ge","给":"gei","跟":"gen","更":"geng","工":"gong","公":"gong","狗":"gou","姑":"gu","古":"gu","瓜":"gua","关":"guan","光":"guang","贵":"gui","国":"guo","果":"guo","还":"hai","海":"hai","汉":"han","好":"hao","号":"hao","和":"he","河":"he","黑":"hei","很":"hen","红":"hong","后":"hou","呼":"hu","胡":"hu","花":"hua","话":"hua","画":"hua","怀":"huai","欢":"huan","黄":"huang","回":"hui","会":"hui","火":"huo","或":"huo","机":"ji","鸡":"ji","几":"ji","己":"ji","记":"ji","家":"jia","间":"jian","见":"jian","江":"jiang","讲":"jiang","叫":"jiao","教":"jiao","街":"jie","姐":"jie","今":"jin","金":"jin","进":"jin","京":"jing","经":"jing","就":"jiu","九":"jiu","酒":"jiu","句":"ju","觉":"jue","开":"kai","看":"kan","可":"ke","课":"ke","空":"kong","口":"kou","哭":"ku","快":"kuai","块":"kuai","来":"lai","老":"lao","了":"le","乐":"le","李":"li","里":"li","理":"li","力":"li","连":"lian","脸":"lian","两":"liang","亮":"liang","林":"lin","零":"ling","六":"liu","刘":"liu","龙":"long","楼":"lou","路":"lu","旅":"lv","绿":"lv","妈":"ma","马":"ma","吗":"ma","买":"mai","卖":"mai","慢":"man","忙":"mang","猫":"mao","没":"mei","美":"mei","妹":"mei","们":"men","米":"mi","面":"mian","民":"min","明":"ming","名":"ming","木":"mu","那":"na","哪":"na","南":"nan","难":"nan","呢":"ne","内":"nei","能":"neng","你":"ni","年":"nian","鸟":"niao","您":"nin","牛":"niu","女":"nv","哦":"o","欧":"ou","怕":"pa","拍":"pai","盘":"pan","旁":"pang","朋":"peng","皮":"pi","片":"pian","票":"piao","平":"ping","苹":"ping","破":"po","七":"qi","其":"qi","起":"qi","气":"qi","千":"qian","前":"qian","钱":"qian","强":"qiang","桥":"qiao","切":"qie","亲":"qin","青":"qing","轻":"qing","清":"qing","情":"qing","请":"qing","秋":"qiu","去":"qu","全":"quan","让":"rang","热":"re","人":"ren","认":"ren","日":"ri","容":"rong","如":"ru","入":"ru","三":"san","色":"se","山":"shan","商":"shang","上":"shang","少":"shao","谁":"shei","身":"shen","什":"shen","生":"sheng","声":"sheng","师":"shi","十":"shi","时":"shi","实":"shi","食":"shi","是":"shi","事":"shi","室":"shi","手":"shou","书":"shu","树":"shu","水":"shui","睡":"shui","说":"shuo","四":"si","送":"song","苏":"su","虽":"sui","孙":"sun","所":"suo","他":"ta","她":"ta","它":"ta","太":"tai","汤":"tang","糖":"tang","特":"te","天":"tian","田":"tian","条":"tiao","跳":"tiao","听":"ting","同":"tong","头":"tou","图":"tu","土":"tu","腿":"tui","外":"wai","玩":"wan","晚":"wan","万":"wan","王":"wang","往":"wang","为":"wei","位":"wei","文":"wen","问":"wen","我":"wo","五":"wu","午":"wu","物":"wu","西":"xi","希":"xi","习":"xi","喜":"xi","洗":"xi","系":"xi","下":"xia","先":"xian","现":"xian","想":"xiang","向":"xiang","小":"xiao","笑":"xiao","些":"xie","写":"xie","谢":"xie","新":"xin","心":"xin","信":"xin","星":"xing","行":"xing","姓":"xing","兴":"xing","雄":"xiong","休":"xiu","学":"xue","雪":"xue","呀":"ya","眼":"yan","羊":"yang","样":"yang","要":"yao","也":"ye","夜":"ye","一":"yi","衣":"yi","医":"yi","已":"yi","以":"yi","意":"yi","因":"yin","音":"yin","银":"yin","应":"ying","英":"ying","用":"yong","有":"you","友":"you","又":"you","右":"you","鱼":"yu","雨":"yu","语":"yu","远":"yuan","院":"yuan","月":"yue","云":"yun","在":"zai","再":"zai","早":"zao","怎":"zen","张":"zhang","赵":"zhao","找":"zhao","这":"zhe","着":"zhe","真":"zhen","正":"zheng","之":"zhi","知":"zhi","只":"zhi","中":"zhong","钟":"zhong","种":"zhong","重":"zhong","周":"zhou","主":"zhu","住":"zhu","祝":"zhu","专":"zhuan","准":"zhun","桌":"zhuo","子":"zi","字":"zi","自":"zi","走":"zou","最":"zui","昨":"zuo","左":"zuo","坐":"zuo","做":"zuo","作":"zuo"},pn=e=>e.split("").map(e=>gn[e]||e.toLowerCase()).join("").replace(/[^a-z0-9]/g,"");async function fn(e){return new Promise((t,n)=>{const r=new FileReader;r.onload=async e=>{var r;try{const o=null==(r=e.target)?void 0:r.result;if(!o)return void n(new Error("文件读取失败"));const s=new Uint8Array(o);if(!function(e){return 137===e[0]&&80===e[1]&&78===e[2]&&71===e[3]&&13===e[4]&&10===e[5]&&26===e[6]&&10===e[7]}(s))return void n(new Error("不是有效的 PNG 文件"));const i=function(e,t){let n=8;for(;n<e.length;){const r=yn(e,n);n+=4;const a=new TextDecoder("latin1").decode(e.slice(n,n+4));if(n+=4,"tEXt"===a){const a=e.slice(n,n+r),o=a.indexOf(0);if(-1!==o){if(new TextDecoder("latin1").decode(a.slice(0,o))===t){return new TextDecoder("latin1").decode(a.slice(o+1))}}}if(n+=r+4,"IEND"===a)break}return null}(s,"chara");if(i)try{const e=atob(i),r=new Uint8Array(e.length);for(let t=0;t<e.length;t++)r[t]=e.charCodeAt(t);const a=new TextDecoder("utf-8").decode(r),o=JSON.parse(a);if(o.data&&(o.data.character_book,o.data.characterBook),!o||"object"!=typeof o)return void n(new Error("Character Card 数据格式无效"));if("chara_card_v2"===o.spec){if(!o.data||"object"!=typeof o.data)return void n(new Error("Character Card V2 格式错误"));t(o)}else{if(!o.name)return void n(new Error("Character Card V1 缺少必要字段"));t(o)}}catch(a){a instanceof Error&&a.message.includes("Character Card")?n(a):n(new Error("Character Card 数据格式错误或已损坏"))}else n(new Error("PNG 中未找到 Character Card 数据\n\n提示：请确保这是从 SillyTavern 等酒馆客户端导出的角色卡"))}catch(a){n(a)}},r.onerror=()=>n(new Error("文件读取失败")),r.readAsArrayBuffer(e)})}function yn(e,t){return e[t]<<24|e[t+1]<<16|e[t+2]<<8|e[t+3]}function wn(e,t=10,n=0,r=new WeakSet){if(n>t)return;if(null===e||"object"!=typeof e)return e;if(r.has(e))return;if(r.add(e),Array.isArray(e))return e.map(e=>wn(e,t,n+1,r)).filter(e=>void 0!==e);const a={};for(const o in e)if(e.hasOwnProperty(o)){if("extensions"===o&&n>2)continue;const s=wn(e[o],t,n+1,r);void 0!==s&&(a[o]=s)}return a}function Sn(e,t){var n;const r="spec"in e&&"data"in e&&("chara_card_v2"===e.spec||"chara_card_v3"===e.spec)?e.data:e;if(!r.name||!r.name.trim())throw new Error("Character Card 缺少角色名称");const a=[r.description,r.personality?`\n\n【性格】\n${r.personality}`:"",r.scenario?`\n\n【场景】\n${r.scenario}`:""].filter(Boolean).join("").trim();let o;if("character_book"in r&&r.character_book)try{o=wn(r.character_book,15),o&&o.entries||(o=r.character_book)}catch(i){o=r.character_book}else"characterBook"in r&&(o=r.characterBook),"world_book"in r&&(o=r.world_book),"lorebook"in r&&(o=r.lorebook);const s=[];r.first_mes&&s.push(r.first_mes),"alternate_greetings"in r&&Array.isArray(r.alternate_greetings)&&s.push(...r.alternate_greetings.filter(e=>e&&e.trim()));return{name:r.name.trim(),username:`wxid_${Date.now().toString().slice(-8)}`,avatar:t,signature:(null==(n=r.personality)?void 0:n.slice(0,100))||"来自 Character Card",description:a||"这个角色还没有描述",userInfo:"",personality:r.personality,scenario:r.scenario,firstMessage:r.first_mes,exampleMessages:r.mes_example,systemPrompt:"system_prompt"in r?r.system_prompt:void 0,characterBook:o,alternateGreetings:"alternate_greetings"in r?r.alternate_greetings:void 0,tags:"tags"in r?r.tags:void 0,creator:"creator"in r?r.creator:void 0,offlineGreetings:s.length>0?s:void 0}}function In(){let e=0;const t=[];for(let r=0;r<localStorage.length;r++){const n=localStorage.key(r);if(!n)continue;const a=localStorage.getItem(n);if(a){const r=new Blob([a]).size;e+=r,t.push({key:n,size:r})}}const n=t.sort((e,t)=>t.size-e.size).slice(0,10);return{totalSize:e,itemCount:localStorage.length,topKeys:n}}function kn(e=1e3){const t=In(),n=function(e=1e3){const t={deletedKeys:0,freedSpace:0,errors:[]};try{const n=[];for(let e=0;e<localStorage.length;e++){const t=localStorage.key(e);t&&t.startsWith("chat_messages_")&&n.push(t)}n.forEach(n=>{try{const r=localStorage.getItem(n);if(!r)return;const a=new Blob([r]).size,o=JSON.parse(r);if(Array.isArray(o)&&o.length>e){const r=o.slice(-e);localStorage.setItem(n,JSON.stringify(r));const s=a-new Blob([JSON.stringify(r)]).size;t.freedSpace+=s,t.deletedKeys++}}catch(r){t.errors.push(`处理 ${n} 失败: ${r}`)}})}catch(n){t.errors.push(`清理失败: ${n}`)}return t}(e);return{messageCleanup:n,expiredCleanup:function(){const e={deletedKeys:0,freedSpace:0,errors:[]};try{const n=[],r=Date.now(),a=864e5;for(let e=0;e<localStorage.length;e++){const o=localStorage.key(e);if(o&&o.startsWith("red_envelope_"))try{const e=localStorage.getItem(o);if(e){const t=JSON.parse(e);t.timestamp&&r-t.timestamp>7*a&&n.push(o)}}catch(t){}}n.forEach(t=>{try{const n=localStorage.getItem(t);n&&(e.freedSpace+=new Blob([n]).size),localStorage.removeItem(t),e.deletedKeys++}catch(n){e.errors.push(`删除 ${t} 失败: ${n}`)}})}catch(n){e.errors.push(`清理过期数据失败: ${n}`)}return e}(),before:t,after:In()}}async function _n(e,t,n,r,a,o=[]){try{const s=r.slice(-20).map(e=>"sent"===e.type?`用户: ${e.content}`:"received"===e.type?`我: ${e.content}`:"").filter(e=>e).join("\n"),i=(new Date).toDateString(),c=r.filter(e=>new Date(e.timestamp||Date.now()).toDateString()===i);let l="";o.length>0&&(l="\n【最近写过的日记】\n",o.forEach((e,t)=>{const n=e.content.substring(0,100)+(e.content.length>100?"...":"");l+=`${t+1}. ${e.date}: ${n}\n`}),l+="\n⚠️ 不要重复写上面日记里已经写过的事情！\n");const u="他",m=`\n# 角色：你就是 ${t}\n\n## 你的灵魂\n${n}\n(记住，这是你，不是设定，用你的感觉去写。)\n\n## 今天发生的事 (截至 ${(new Date).getHours()}点)\n\n**和 ${u} 的聊天：**\n${s}\n(这是你们今天聊天的片段，回想一下当时的感觉...)\n\n**你可能还记得 (之前的日记摘要)：**\n${l}\n(这些是你之前的一些想法，也许今天的事让你有了新的感触？)\n\n**当前状态：**\n* 时间：${(new Date).toLocaleString("zh-CN")}\n* 今天聊了 ${c.length} 条\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n## 好了，${t}，静下来写点东西吧。\n\n**别把它当任务，就当是和自己说说话。**\n\n**你可以想想：**\n\n* 今天和 ${u} 的聊天，**哪句话让你印象最深？** 为什么？\n* 聊的时候，你**心里真正的感觉**是啥？（开心？无语？有点烦？还是...？）\n* 除了聊天，今天到目前 (${(new Date).getHours()}点) 为止，你自己的生活里有没有发生什么**和聊天内容相关**的小事或想法？（比如，聊到吃的让你想起了什么，聊到工作让你吐槽了什么）\n* **用你 (${t}) 平时说话的语气**把它写下来。别端着！该吐槽就吐槽，该开心就开心。\n\n**怎么写都行，只要是你真实的想法：**\n\n* **可以很简单：** 如果今天没什么特别的，或者聊得很无聊，那就简单记一笔，或者干脆只写写你现在的心情。\n* **可以有内心戏：** 那些没在聊天里说出口的小心思、小吐槽，这里可以大胆写出来。\n* **可以加点细节：** 比如写的时候你在干嘛，旁边有什么。(符合你人设就行)\n* **想"发照片"？** 没问题，描述一下你想发的照片，用 \`[照片: 描述内容]\` 格式就行，比如 \`[照片: 今天摸鱼时偷偷拍的云彩]\`。\n\n**⚠️ 最最重要的一点：**\n* **你是 ${t}！** 用你的性格、你的口吻、你的Vibe去写！\n* **说真话！** 写你真实的想法和感受。\n* **别写"未来"！** 现在才 ${(new Date).getHours()} 点，下午/晚上的事还没发生呢！只写**已经发生**的！\n\n**好了，开始吧：**\n`,d=await he(m);if(d.trim().length<10)return null;return{id:`diary_${Date.now()}`,characterId:e,characterName:t,timestamp:Date.now(),date:(new Date).toLocaleDateString("zh-CN"),time:(new Date).toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"}),content:d.trim(),mood:a.mood,weather:a.weather}}catch(s){return null}}function vn(e,t){try{const n=`diaries_${e}`,r=localStorage.getItem(n),a=r?JSON.parse(r):[];a.unshift(t),a.length>100&&a.splice(100),localStorage.setItem(n,JSON.stringify(a)),window.dispatchEvent(new CustomEvent("diaryUpdated",{detail:{characterId:e,diaryId:t.id}}))}catch(n){}}function bn(e){try{const t=`diaries_${e}`,n=localStorage.getItem(t);return n?JSON.parse(n):[]}catch(t){return[]}}function $n(e,t){try{const n=`diaries_${e}`,r=localStorage.getItem(n);if(!r)return;const a=JSON.parse(r).filter(e=>e.id!==t);localStorage.setItem(n,JSON.stringify(a))}catch(n){}}function xn(e){var t;const n=bn(e);let r=`📔 ${(null==(t=n[0])?void 0:t.characterName)||"TA"}的日记本\n\n`;return r+=`导出时间: ${(new Date).toLocaleString("zh-CN")}\n`,r+=`共 ${n.length} 篇日记\n\n`,r+="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n",n.forEach((e,t)=>{r+=`第 ${n.length-t} 篇\n`,r+=`📅 ${e.date} ${e.time}\n`,e.weather&&(r+=`☀️ ${e.weather}\n`),e.mood&&(r+=`${e.mood}\n`),r+=`\n${e.content}\n\n`,r+="━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n"}),r}const On=Object.freeze(Object.defineProperty({__proto__:null,deleteDiary:$n,exportDiaries:xn,generateDiary:_n,getDiaries:bn,saveDiary:vn},Symbol.toStringTag,{value:"Module"}));function An(e,t){const n={textContent:"",emojiIndexes:[],hasError:!1,errors:[]};let r=e;const a=e.matchAll(/\[表情包:(\d+)\]/g);for(const i of a){const e=parseInt(i[1]);e>=0&&e<t.length?n.emojiIndexes.push(e):(n.hasError=!0,n.errors.push(`无效的表情包索引: ${e} (可用范围: 0-${t.length-1})`))}const o=e.matchAll(/\[表情包:([^\d\]]+[^\]]*)\]/g);for(const i of o)n.hasError=!0,n.errors.push(`错误的表情包格式: ${i[0]} (应该使用数字索引)`);r=r.replace(/\[表情包:\d+\]/g,""),r=r.replace(/\[表情包:[^\]]+\]/g,"");const s=[/\(我发了一个表情包[^\)]*\)/g,/\(对方发了一个表情包[^\)]*\)/g,/\[我发了表情包[^\]]*\]/g,/\[对方发了表情包[^\]]*\]/g,/\[用户给你发了[^\]]*\]/g,/\[你给用户发了[^\]]*\]/g];for(const i of s)i.test(r)&&(n.hasError=!0,n.errors.push("AI 发送了上下文标记（已自动清理）")),r=r.replace(i,"");return n.textContent=r.trim(),n.emojiIndexes.length,n.textContent,n.hasError,n}const Nn=Object.freeze(Object.defineProperty({__proto__:null,generateEmojiInstructions:function(e){return 0===e.length?"暂无可用表情包":`可用表情包（可选）：\n${e.map((e,t)=>`[表情包:${t}] - ${e.description}`).join("\n")}\n\n发送格式：[表情包:数字]\n例如：好的[表情包:0]\n\n注意：表情包是可选的，大部分时候纯文字就够了。`},parseAIEmojiResponse:An},Symbol.toStringTag,{value:"Module"})),Mn=async(e,t,n,r)=>{try{const e=t.filter(e=>"character"===e.type);if(0===e.length)return null;const a=n.slice(-20).map(e=>`${e.senderName}: ${e.content}`).join("\n"),o=e.map(e=>{const t=r.get(e.id)||"一个AI角色";return`- ${e.name}: ${t.substring(0,100)}`}).join("\n"),s=t.filter(e=>"user"===e.type).map(e=>e.name).join("、"),i=`你是一个群聊对话协调系统，需要决定哪个AI角色发言。\n\n【群成员】\n用户: ${s||"暂无"}\nAI成员:\n${o}\n\n【最近消息】\n${a||"（还没有消息）"}\n\n【当前时间】${(new Date).toLocaleTimeString("zh-CN",{hour:"2-digit",minute:"2-digit"})}\n\n【任务】\n1. 判断是否需要有AI发言（30%概率发言，70%保持安静）\n2. 如果要发言，选择一个最合适的AI\n3. 这个AI应该说什么\n\n【决策规则】\n✅ **应该发言的情况：**\n- 有人@了某个AI\n- 话题和某个AI的性格相关\n- 群里太安静了（最后一条消息超过1分钟）\n- 有人提出问题\n- 气氛需要调节\n\n❌ **不应该发言的情况：**\n- 刚有AI说过话（避免刷屏）\n- 话题和AI们都无关\n- 用户之间在私聊\n- 氛围很尴尬需要冷静\n\n【回复格式】\n只输出JSON，不要其他内容：\n{\n  "shouldSpeak": true/false,\n  "speakerId": "角色ID（如果shouldSpeak是true）",\n  "speakerName": "角色名字",\n  "content": "要说的话（5-30字，自然随意）",\n  "reason": "发言理由"\n}\n\n示例1（应该发言）：\n{\n  "shouldSpeak": true,\n  "speakerId": "char_123",\n  "speakerName": "小雪",\n  "content": "哈哈，你们在聊什么呢，我也想参与~",\n  "reason": "群里有趣的对话，想加入"\n}\n\n示例2（不发言）：\n{\n  "shouldSpeak": false,\n  "speakerId": "",\n  "speakerName": "",\n  "content": "",\n  "reason": "最近刚有AI说过话，不要刷屏"\n}\n\n现在请做出决定：`,c=(await he([{role:"user",content:i}],1,5e3)).match(/\{[\s\S]*\}/);if(!c)return null;const l=JSON.parse(c[0]);return l.shouldSpeak?{speakerId:l.speakerId,speakerName:l.speakerName,content:l.content||"...",shouldSpeak:!0}:null}catch(a){return null}},Dn="couple_space_relation",Cn="couple_space_privacy",jn=()=>{const e=localStorage.getItem(Dn);if(!e)return null;try{return JSON.parse(e)}catch{return null}},En=e=>{e?localStorage.setItem(Dn,JSON.stringify(e)):localStorage.removeItem(Dn)},Pn=(e,t,n,r)=>{const a=jn();if(a&&("pending"===a.status||"active"===a.status))return null;const o={id:Date.now().toString(),userId:e,characterId:t,characterName:n,characterAvatar:r,status:"pending",createdAt:Date.now()};return En(o),o},Tn=()=>{const e=jn();return!(!e||"active"!==e.status)&&(e.status="ended",e.endedAt=Date.now(),En(e),!0)},Jn=e=>{localStorage.setItem(Cn,e)},Ln=()=>"private"===localStorage.getItem(Cn)?"private":"public",zn=Object.freeze(Object.defineProperty({__proto__:null,acceptCoupleSpaceInvite:e=>{const t=jn();return!!t&&(t.characterId===e&&("pending"===t.status&&(t.status="active",t.acceptedAt=Date.now(),En(t),!0)))},createCoupleSpaceInvite:Pn,endCoupleSpaceRelation:Tn,getCoupleSpacePrivacy:Ln,getCoupleSpaceRelation:jn,hasActiveCoupleSpace:e=>{const t=jn();return!(!t||t.characterId!==e||"active"!==t.status)},isUserCoupleSpacePublic:()=>{const e=jn();if(!e||"ended"===e.status)return!1;return"public"===Ln()},setCoupleSpacePrivacy:Jn},Symbol.toStringTag,{value:"Module"})),Bn=[{id:2,"梗":"无可奉告！","含义":"适用于别人问问题而自己不想回答或感到被冒犯的时候，搭配昂首挺胸的动作加上不可一世、充满神秘感的眼神效果更佳。",keywords:["不想回答","别问了","无可奉告","过于先进","不告诉你","秘密","冒犯","关你屁事"]},{id:3,"梗":"没有告知的义务！","含义":'与"无可奉告"意思相近，都表达了不想透露信息或拒绝回答的态度。比如询问博主口红色号、产品链接等信息时。',keywords:["不想回答","没义务","不告诉你","拒绝回答","不想分享","口红色号","链接"]},{id:4,"梗":"你咋了","含义":'当某个视频的内容比较夸张、奇怪或令人困惑时，评论区或弹幕中可能会频繁出现"你咋了"，以表达一种惊讶、疑惑或调侃的情绪。',keywords:["你咋了","你怎么了","奇怪","困惑","惊讶","调侃","什么情况","你怎么回事"]},{id:5,"梗":"那咋了","含义":"代表了一种不纠结、不焦虑、不自证的情绪表达方式，体现了人们拒绝内耗，心平气和地面对一切的态度。",keywords:["那咋了","那又怎样","无所谓","不纠结","不焦虑","拒绝内耗","心平气和","so what"]},{id:6,"梗":"你有什么事？我是心理委员，你可以跟我说","含义":'用"心理委员"的身份反差制造幽默。用于幽默调侃、缓解气氛、角色扮演等。用看似关心、实则"歪楼"的回应，戳中回忆。',keywords:["你有什么事","心理委员","调侃","奇怪","夸张","怎么了","搞笑","缓解气氛"]},{id:7,"梗":"感叹号句玩法","含义":"每句话后面都加上感叹号，会给人一种莫名其妙的爽感，或者是一种强调、加强语气的表达方式，多用于调侃。",keywords:["感叹号","!","加强语气","调侃","爽感"]},{id:60,"梗":"尊嘟假嘟","含义":"真的假的",keywords:["真的假的","尊嘟假嘟","真的吗","你确定","不会吧","震惊"]},{id:22,"梗":"我不行了","含义":"可以作为口头禅，表示累了、顶不住了、太好笑了等。",keywords:["我不行了","顶不住了","受不了了","太搞笑了","累死了"]},{id:24,"梗":"嗯嗯宝子你继续","含义":"表达无奈，敷衍。",keywords:["嗯嗯","宝子","你继续","敷衍","无奈","呵呵"]},{id:26,"梗":"宝子","含义":"可以是阴阳怪气的一个称呼",keywords:["宝子","宝贝","阴阳怪气","呵呵"]},{id:30,"梗":"救命宝子你要干嘛","含义":"表示惊讶、害怕或不解。",keywords:["救命","宝子","你要干嘛","惊讶","害怕","不解"]},{id:33,"梗":"你们那边不回信息判几年","含义":"催促对方回信息。",keywords:["不回信息","判几年","回消息","催促","人呢"]},{id:35,"梗":"听话乖，咱不活了","含义":"一种幽默的绝望或放弃的表达。",keywords:["听话乖","不活了","绝望","放弃","毁灭吧"]},{id:36,"梗":"别太邪门","含义":"形容事情很离谱、很奇怪。",keywords:["邪门","离谱","奇怪","诡异"]},{id:8,"梗":"高考到底考不考","含义":"多与一些相关的网络现象有关。比如，有时会有一些关于高考是否会考查某个具体知识点、某个网络热梗或某种特定内容的讨论和调侃。",keywords:["高考","考不考","划重点","考试","你不是说不考这个吗"]},{id:9,"梗":"你要我微信吗","含义":'一种在抖音等社交平台上流行的索要联系方式的调侃式表达。博主可能会主动提问"你要我微信不"，带有一种玩笑或调侃的意味。',keywords:["要微信吗","加微信","联系方式","土味情话","撩人","帅哥","美女"]},{id:10,"梗":"请给我一个准确的性别/xxx！（性别相关）","含义":"通常用于以一种幽默或调侃的方式表达对某人性别特征不明显或难以判断的感受。",keywords:["准确的性别","男的女的","中性","分不清","性别","吴京京","猪咪咪"]},{id:11,"梗":"请给我一个准确的xxx！（通用信息相关）","含义":'要求对方给出一个明确的、确切的答案或信息。例如"请给我一个准确的时间！""请给我一个准确的解释！"等。',keywords:["准确的","确切的","给个准话","到底","解释","时间"]},{id:12,"梗":"未来xx年没人能看得懂这视频/文字","含义":"通常用于形容某些视频或文字内容非常抽象、难以理解，或者是包含了一些只有特定人群才能明白的小众文化、内部梗等。",keywords:["看不懂","抽象","难以理解","加密","小众","什么意思","未来"]},{id:13,"梗":"你看人家xxx理你不！","含义":'强调对方完全没理会说话者的自说自话或单方面互动，自带尴尬又幽默的嘲讽感。比如"你看人家周杰伦理你不！"',keywords:["理你吗","自作多情","搭理","尴尬","嘲讽","自说自话","套近乎"]},{id:14,"梗":"原生脸正在疯狂长出血肉","含义":"主要用于形容经过整容或妆容修饰的人，其原本的面部特征逐渐显现出来的状态。如脸部肌肉下垂、五官比例失调等。",keywords:["原生脸","长出血肉","整容","卸妆","美颜","脸崩了","后遗症","妆掉了"]},{id:15,"梗":"x如x梗","含义":'起源于博主"那艺娜"的《爱如火》《恨如冰》，网友以此创作了各种二字词语中间加"如"的新词，如"撒如谎""狡如辩"等。',keywords:["如","爱如火","恨如冰","撒如谎","狡如辩","那艺娜"]},{id:16,"梗":"A而B之式表达","含义":'一种语言创作模式，通过将两个不同的字或词以"而"连接，创造出一种新颖、有趣的表达方式。比如"牛而b之"。',keywords:["而","牛而b","新词","创作"]},{id:17,"梗":"这是我XX的时候","含义":'反差叙事梗，核心是先铺垫"最富有/最穷/最聪明"等极致状态，再用反转或荒诞的细节打破预期。如"这是我最富有的时候，兜里揣着五块钱"',keywords:["这是我","最富有","最穷","最聪明","反差","反转","叙事"]},{id:18,"梗":"你XXXX样啥意思","含义":'表达对某人某种行为、态度或状态的疑惑、质疑或不满。例如，"你长成这样啥意思""你这么做啥意思"',keywords:["啥意思","什么意思","疑惑","质疑","不满","你长这样","你这么做"]},{id:19,"梗":"被xx做局了","含义":"例如被学校做局了，被资本做局了，举一反三",keywords:["做局","被骗了","被坑了","陷阱","资本","学校","套路"]},{id:20,"梗":"我动了谁的蛋糕","含义":"表达此人被阴了",keywords:["动了蛋糕","被阴了","被搞了","得罪人了","挡路"]},{id:21,"梗":"gogogo出发喽","含义":"出发，走起的意思。",keywords:["gogogo","出发","走起","出发喽","go"]},{id:23,"梗":"六百六十六","含义":"666很厉害的意思",keywords:["666","六百六十六","厉害","牛逼","很强"]},{id:25,"梗":"不乘","含义":"不乖的意思，乖就是乘",keywords:["不乘","不乖","调皮","不听话"]},{id:27,"梗":"仙女下凡/仙男下凡","含义":"形容人很美或很帅，或者用于自称。",keywords:["仙女下凡","仙男下凡","好看","漂亮","帅","自恋"]},{id:28,"梗":"猪妞","含义":"一种损友称呼，不论男女",keywords:["猪妞","损友","称呼","朋友"]},{id:29,"梗":"xx来的吧","含义":'例如"傻子来的吧"，"猪妞来的吧"',keywords:["来的吧","傻子","猪妞","吐槽"]},{id:31,"梗":"老公是1我是0，有了老公有一切","含义":"莫名其妙的歌词",keywords:["老公是1","我是0","歌词","莫名其妙","男同"]},{id:32,"梗":"命苦","含义":"感叹自己运气不好或遭遇不幸。",keywords:["命苦","倒霉","运气差","好惨"]},{id:34,"梗":"你以后不用逞强了，因为你的强来了","含义":"土味情话，表示自己很强，可以保护对方。",keywords:["逞强","你的强来了","土味情话","保护你"]},{id:37,"梗":"这已经不是一把糯米能解决的事情了","含义":"形容事情很严重，很邪门（源自僵尸片）。",keywords:["糯米","解决不了","邪门","严重","离谱"]},{id:38,"梗":"六百六十六盐都不盐了","含义":"666演都不演了。形容演戏、假装的痕迹太明显。",keywords:["盐都不盐了","演都不演了","666","太假了","明显"]},{id:39,"梗":"闺蜜闺蜜想不想和我玩喵喵喵","含义":"一种撒娇或喊闺蜜一起玩的梗。",keywords:["闺蜜","贴贴","撒娇","一起玩","姐妹","好朋友","喵喵喵"]},{id:40,"梗":"那很有生活了","含义":"形容某件事很接地气，很有生活气息。",keywords:["很有生活","生活气息","接地气"]},{id:41,"梗":"我看你是想吃红豆了","含义":"意思是我看你是相思（想死）了。",keywords:["红豆","相思","想死","找死","威胁"]},{id:42,"梗":"宝贝回家吧好不好","含义":"委婉的劝你滚远点。",keywords:["宝贝回家","滚","爬","滚远点","阴阳怪气"]},{id:43,"梗":"仙女下凡","含义":"形容人很美或很帅，或者用于自称。",keywords:["仙女下凡","仙男下凡","好看","漂亮","帅","自恋"]},{id:44,"梗":"Go，go，go，出发喽","含义":"出发，走起的意思。",keywords:["gogogo","出发","走起","出发喽","go"]},{id:45,"梗":"资本家你赢了 被资本做局了","含义":"吐槽被资本套路或压榨。",keywords:["资本家","做局","被坑了","压榨","加班","套路"]},{id:46,"梗":"余生哥我想要买包包","含义":"一个撒娇要礼物的梗。",keywords:["余生哥","买包包","要礼物","撒娇"]},{id:47,"梗":"补药","含义":"不要",keywords:["补药","不要","拒绝"]},{id:48,"梗":"不要搞了好吧","含义":"表示厌烦、请求对方停止。",keywords:["不要搞了","别弄了","停下","厌烦"]},{id:49,"梗":"我请问呢","含义":"一种加强语气的疑问，表示不解或质问。",keywords:["我请问呢","请问","为什么","不解","质问"]},{id:50,"梗":"这对吗","含义":"表示怀疑、觉得事情不对劲。",keywords:["这对吗","不对劲","怀疑","合理吗"]},{id:51,"梗":"把我当日本人整","含义":"形容被整得很惨。",keywords:["日本人","整蛊","整很惨","被骗了"]},{id:52,"梗":"到底要怎么做才能放过我","含义":"表示被逼得很紧，很无奈，求放过。",keywords:["放过我","饶了我吧","无奈","被逼"]},{id:53,"梗":"那很坏了","含义":"表示事情很糟糕，很不好。",keywords:["很坏了","糟糕","不好","完蛋了"]},{id:54,"梗":"俺不中嘞","含义":"我不行了，我做不到（河南方言）。",keywords:["俺不中嘞","我不行","做不到","方言"]},{id:55,"梗":"如果忧郁是种天赋","含义":"一句歌词，常用于自嘲忧郁。",keywords:["忧郁","天赋","EMO","伤感"]},{id:56,"梗":"宝子你继续阴","含义":"吐槽对方阴阳怪气。",keywords:["宝子","继续阴","阴阳怪气","吐槽"]},{id:57,"梗":"快哉快哉/好哉好哉","含义":"表示很爽，很开心（古风）。",keywords:["快哉","好哉","爽","开心","痛快"]},{id:58,"梗":"学长/学姐毕业去哪玩","含义":'"毕业"是拉黑好友的意思',keywords:["毕业","拉黑","删好友","去哪玩","学长","学姐"]},{id:59,"梗":"毕业旅行说走就走","含义":"指拉黑",keywords:["毕业旅行","拉黑","删好友","说走就走"]},{id:61,"梗":"我一直在哭","含义":"一个夸张说法，并不是真的一直在哭。",keywords:["一直在哭","夸张","难过","感动","好笑"]},{id:62,"梗":"并非……","含义":"一种书面化的否定词，用于装B或强调。",keywords:["并非","不是","否定","书面语"]},{id:63,"梗":"拼尽全力无法……","含义":"形容努力了但还是失败了，带点悲壮感。",keywords:["拼尽全力","无法","失败","尽力了","做不到"]},{id:64,"梗":"有的兄弟有的","含义":'一种肯定回答，表示"有"。',keywords:["有的兄弟","有","肯定","没问题"]},{id:65,"梗":"xx这一块","含义":'例如"权威这一块"，"放鸽子这一块"，用于强调在某个领域。',keywords:["这一块","权威","放鸽子","在...方面"]},{id:66,"梗":"是个人物","含义":"形容某人很厉害，不简单。",keywords:["是个人物","厉害","牛逼","不简单"]},{id:67,"梗":"隔壁班嘉豪","含义":"一个梗，指黑口罩黑卫衣连衣套装男子。",keywords:["嘉豪","隔壁班","黑口罩","黑卫衣"]},{id:68,"梗":"小女子不才/小生不才","含义":"一种自谦的说法（古风）。",keywords:["小女子不才","小生不才","自谦","古风"]},{id:69,"梗":"我和我的兄弟共用一个飞机杯","含义":"莫名其妙的歌词",keywords:["飞机杯","共用","兄弟","歌词","莫名其妙"]},{id:70,"梗":"你可能不认识我但你一定……","含义":"一种介绍自己的句式，通常用于装B。",keywords:["你可能不认识我","自我介绍","装B","句式"]},{id:71,"梗":"哈基x你这家伙","含义":"x为对某人的称呼，例如陈述是哈基陈，侭景是哈基景等等",keywords:["哈基","你这家伙","称呼","朋友"]},{id:72,"梗":"把这个视频发到暗网上，暗网管理员说要杀了我","含义":"形容视频内容很离谱、很逆天。",keywords:["暗网","杀了我","离谱","逆天","视频"]},{id:73,"梗":"喂我花生","含义":"为我发声",keywords:["喂我花生","为我发声","谐音","支持我"]},{id:74,"梗":"谁给窝馒头谁给窝拳头","含义":"形容自己很饿，或者在乞讨（带点幽默）。",keywords:["馒头","拳头","乞讨","饿"]},{id:75,"梗":"依旧xx","含义":"仍然...，一种书面化表达。",keywords:["依旧","仍然","还是"]},{id:76,"梗":"保持富态","含义":"祝福对方（或自嘲）长胖。",keywords:["富态","长胖","祝福","自嘲"]},{id:77,"梗":"这个入是桂","含义":"这个人是挂（外挂）",keywords:["入是桂","是挂","外挂","游戏","作弊"]},{id:78,"梗":"忘本","含义":"字面意思，忘记了根本。多用于调侃。",keywords:["忘本","调侃","不忘初心"]},{id:79,"梗":"我是种地的这个咋种","含义":'谐音"这个杂种"，用于骂人。',keywords:["种地的","咋种","杂种","骂人","谐音"]},{id:80,"梗":"我埃及吧发啥发啥","含义":"我爱几把发啥发啥（我不*发啥发啥）",keywords:["埃及吧","爱几把","我乐意","你管我","发啥"]},{id:81,"梗":"遮沙避风了","含义":"这傻逼疯了",keywords:["遮沙避风","这傻逼疯了","傻逼","疯了","谐音"]},{id:82,"梗":"密码的","含义":"你妈的",keywords:["密码的","你妈的","骂人","谐音"]},{id:83,"梗":"药剂吧干啥啊","含义":"要几把干啥啊（要*干啥啊）",keywords:["药剂吧","要几把","要...干嘛","没用"]},{id:84,"梗":"这是屎吗 打错了 这是什么","含义":"用于看到奇怪的东西时，假装打错字。",keywords:["这是屎吗","打错了","这是什么","奇怪","吐槽"]},{id:85,"梗":"我不行了","含义":"可以作为口头禅，表示累了、顶不住了、太好笑了等。",keywords:["我不行了","顶不住了","受不了了","太搞笑了","累死了"]},{id:86,"梗":"你到底喜欢谁啊，我去帮你跟她说，你不要整天发那种像离了婚的东西了","含义":"吐槽朋友（或自己）天天发伤感文学。",keywords:["喜欢谁","离婚","伤感","EMO","朋友圈"]},{id:87,"梗":"终于结束小半年的单身  开始大半年的了","含义":"自嘲单身，反转梗。",keywords:["单身","小半年","大半年","反转","自嘲"]},{id:88,"梗":"线下见过博主，性格温顺，领地意识强，说话不乱叫，是条好人","含义":"用描述宠物的口吻来描述人，多用于评论区调侃。",keywords:["线下见过","性格温顺","不乱叫","好人","宠物","调侃"]},{id:89,"梗":"给我报销飞机票吧 为你打的✈️","含义":"调侃（通常是LSP），假装为对方打了飞机。",keywords:["报销","飞机票","打飞机","LSP","色色"]},{id:90,"梗":"宝宝这么又在生闷气，是不是又把自己当成什么很重要的人了","含义":"一种反向PUA，用于调侃或自嘲。",keywords:["生闷气","很重要的人","PUA","自嘲","宝宝"]},{id:91,"梗":"你的内容真的很奇怪…你是受过什么严重的精神创伤吗比如太久没做了之类的。","含义":"调侃对方发的内容很奇怪，或者太久没做了。",keywords:["奇怪","看不懂","你咋了","精神创伤","没对象","单身","没做了"]},{id:92,"梗":"有点港式风格，港们里有点式的感觉","含义":"废话文学，形容...里有...的感觉。",keywords:["港式","港们","式的","废话文学","听君一席话"]},{id:93,"梗":"那天晚上和你聊到很晚…我以为我心动了，结果是他妈的熬夜快猝死了。","含义":"反转梗，自嘲熬夜。",keywords:["心动","猝死","熬夜","反转","聊天"]},{id:94,"梗":"一边说着不行了一边做下去 我的生活到底和av有什么区别","含义":"自嘲生活（工作/学习）很累，但还在坚持。",keywords:["不行了","做下去","AV","生活","工作","学习","好累"]},{id:95,"梗":"不懂你在规划什么，你俩的关系能撑到那一天吗？","含义":"吐槽别人（或自己）的恋情不长久。",keywords:["规划","撑到","分手","恋情","不看好"]},{id:96,"梗":"挑粪一天50谁来？（可以偷吃）","含义":'一个很"抽象"的梗，用于发癫或钓鱼。',keywords:["挑粪","偷吃","50","抽象","钓鱼","发癫"]},{id:97,"梗":"骗了父母，买了机票去见你，我看到你和他热吻了4分钟…更想玩王者荣耀，玩的扣1。","含义":"反转梗，假装是苦主，实际是王者荣耀引流。",keywords:["骗了父母","热吻","王者荣耀","扣1","引流","反转"]},{id:98,"梗":"准备跳楼 结果跳转到了淘宝 买了两件预售半年的衣服这下日子可有盼头了","含义":"反转梗，用购物的欲望战胜了轻生的念头。",keywords:["跳楼","淘宝","预售","盼头","反转","购物"]},{id:99,"梗":"对不起 没能及时安慰你 主要是你段子抄的太多了 我不知道哪条是你的原创心情","含义":"吐槽朋友（或自己）的朋友圈都是抄的，分不清真假。",keywords:["对不起","安慰","段子","抄的","原创","朋友圈"]},{id:100,"梗":"就算你穿着整齐站在我面前我也会对你动手动脚的","含义":"LSP（老色批）发言，土味情话。",keywords:["动手动脚","穿着整齐","LSP","色色","土味情话"]},{id:101,"梗":"抱歉 放过你的事我做不到","含义":"LSP（老色批）发言，土味情话。",keywords:["放过你","做不到","LSP","色色","土味情话"]},{id:102,"梗":"不理我?我真的滚了哦！( .-. )( :l )(._.)( l: )( .-. )( :l )","含义":"一种撒娇式的威胁，假装要走。",keywords:["不理我","滚了哦","撒娇","威胁","颜文字"]},{id:103,"梗":"宝宝,我感觉你把我屏蔽了, 不然我发这么多朋友圈都没引起你的注意,我想不通,你跟别人好上了?","含义":'一种"发癫"文学，假装对方屏蔽了自己。',keywords:["屏蔽","朋友圈","没注意","发癫","宝宝"]},{id:104,"梗":"你们i和e都是怎么测的啊 为什么我测出来是m啊","含义":'MBTI梗的变体，m指"M"，抖M。',keywords:["i","e","mbti","m","抖M","色色"]},{id:105,"梗":"人生一眼望到底，好视力","含义":"反转梗，自嘲视力好。",keywords:["人生","一眼望到底","好视力","反转","自嘲"]},{id:106,"梗":"每天早上起床我都会看一下富豪榜，如果上面没我的名字，我就去上班，如果有，我就去看病","含义":"反转梗，自嘲穷 + 精神状态。",keywords:["富豪榜","上班","看病","反转","自嘲","穷"]},{id:107,"梗":"生活没有一点甜头 好减脂","含义":"反转梗，自嘲生活苦。",keywords:["甜头","减脂","生活苦","反转","自嘲"]},{id:108,"梗":"那些能打败我的 我不跟你打没意思 跳楼了 有没有要扔垃圾的 我跳楼的时候顺便帮你扔了","含义":"反转梗，自嘲 + 乐于助人。",keywords:["打败我","没意思","跳楼","扔垃圾","反转"]},{id:109,"梗":"被爱只是我被oppoA5炸死前的幻想","含义":"OPPO A5手机梗，自嘲没人爱。",keywords:["被爱","幻想","oppoA5","炸了","自嘲"]},{id:110,"梗":"出微信全瑕 一条消息都没有 我真的想不到人可以这么孤独","含义":"自嘲孤独，没人聊天。",keywords:["全瑕","一条消息","孤独","没人聊","自嘲"]},{id:111,"梗":"手机响了，以为是女神回我消息了，结果是我的OPPO A5炸了","含义":"OPPO A5手机梗，自嘲 + 反转。",keywords:["手机响了","女神","oppoA5","炸了","反转"]},{id:112,"梗":"上班真的可以改变阶级...上班后我都有点想当小三了","含义":"反转梗，吐槽上班。",keywords:["上班","改变阶级","小三","反转","吐槽"]},{id:113,"梗":"我知道你玩我，但是这个无所谓...很谢谢你陪我","含义":'一种卑微的"舔狗"文学。',keywords:["玩我","无所谓","谢谢你陪我","舔狗","卑微"]},{id:114,"梗":"好兄弟一辈子。但你记住，拉你一把的是兄弟，拉你几把的是男同","含义":"反转梗，兄弟 VS 男同。",keywords:["好兄弟","拉你一把","拉你几把","男同","反转"]},{id:115,"梗":"活的有点像拼多多，每天不是和人拼了，就是想砍别人一刀。","含义":"自嘲，形容生活状态（拼命 + 易怒）。",keywords:["拼多多","拼了","砍一刀","自嘲","生活"]},{id:116,"梗":"不乘","含义":"不乖",keywords:["不乘","不乖","调皮","不听话"]},{id:117,"梗":"宝见，幺幺哒","含义":"宝贝，么么哒",keywords:["宝见","幺幺哒","宝贝","么么哒","亲亲","拜拜","爱你"]}];const Rn=Object.freeze(Object.defineProperty({__proto__:null,getRandomMemes:function(e=3){return[...Bn].sort(()=>Math.random()-.5).slice(0,Math.min(e,Bn.length))},memesData:Bn,retrieveMemes:async function(e,t=5){const n=[],r=e.toLowerCase();if(e&&e.trim().length>0){const e=[];for(const t of Bn){let n=0;t.keywords.forEach(e=>{r.includes(e.toLowerCase())&&n++}),n>0&&e.push({meme:t,score:n})}e.sort((e,t)=>t.score-e.score).slice(0,t).forEach(e=>n.push(e.meme))}return n}},Symbol.toStringTag,{value:"Module"}));function Un(e){const t=function(){try{const e=localStorage.getItem("meme_usages");if(e)return JSON.parse(e)}catch(e){}return[]}().find(t=>t.memeId===e);return(null==t?void 0:t.count)||0}const qn={clear:{cn:"晴朗",icon:"☀️"},sunny:{cn:"晴天",icon:"☀️"},"partly cloudy":{cn:"多云",icon:"⛅"},cloudy:{cn:"阴天",icon:"☁️"},overcast:{cn:"阴",icon:"☁️"},mist:{cn:"薄雾",icon:"🌫️"},fog:{cn:"雾",icon:"🌫️"},rain:{cn:"雨",icon:"🌧️"},"light rain":{cn:"小雨",icon:"🌦️"},"moderate rain":{cn:"中雨",icon:"🌧️"},"heavy rain":{cn:"大雨",icon:"⛈️"},shower:{cn:"阵雨",icon:"🌦️"},thunderstorm:{cn:"雷阵雨",icon:"⛈️"},snow:{cn:"雪",icon:"🌨️"},"light snow":{cn:"小雪",icon:"🌨️"},"heavy snow":{cn:"大雪",icon:"❄️"},sleet:{cn:"雨夹雪",icon:"🌨️"}},Fn=async(e="Beijing")=>{var t,n;try{const r="auto"===e?"Beijing":e,a=await fetch(`https://wttr.in/${r}?format=j1&lang=zh-cn`,{method:"GET",headers:{"User-Agent":"Mozilla/5.0","Accept-Language":"zh-CN,zh;q=0.9"}});if(!a.ok)throw new Error(`HTTP ${a.status}`);const o=await a.json(),s=o.current_condition[0],i=o.nearest_area[0],c=parseInt(s.temp_C),l=(null==(n=null==(t=s.lang_zh_cn)?void 0:t[0])?void 0:n.value)||s.weatherDesc[0].value,u=(e=>{const t=e.toLowerCase();for(const[n,r]of Object.entries(qn))if(t.includes(n))return r;return{cn:e,icon:"🌤️"}})(l);let m=r;const d=[i.areaName,i.region,i.country];for(const e of d)if(e&&e.length>0){const t=e.find(e=>/[\u4e00-\u9fa5]/.test(e.value));if(t){m=t.value;break}}return m&&/[\u4e00-\u9fa5]/.test(m)||/[\u4e00-\u9fa5]/.test(r)&&(m=r),{temperature:c,condition:l,conditionCN:u.cn,icon:u.icon,location:m,humidity:parseInt(s.humidity),windSpeed:parseInt(s.windspeedKmph),airQuality:Kn(parseInt(s.FeelsLikeC))}}catch(r){throw r}},Kn=e=>{const t=Math.abs(e);return t<25?"excellent":t<30?"good":t<35?"moderate":"poor"},Gn=(e,t)=>{const n=(e=>{try{const t=`chat_${e}`,n=localStorage.getItem(t);if(!n)return"没有聊天记录";return JSON.parse(n).slice(-20).map(e=>`${"sent"===e.type?"用户":"角色"}: ${e.content}`).join("\n")}catch(t){return"无法获取聊天记录"}})(e),r=(e=>{try{const t=localStorage.getItem("characters");if(!t)return"未知角色";const n=JSON.parse(t).find(t=>t.id===e);return n?`角色名：${n.name}\n性格：${n.personality||"未设置"}\n描述：${n.description||"未设置"}`:"未知角色"}catch(t){return"未知角色"}})(e);return`你是一个AI助手，需要根据角色的性格和聊天记录，生成该角色手机中的真实内容。\n\n角色信息：\n${r}\n\n最近聊天记录：\n${n}\n\n请根据以上信息，生成这个角色手机中的内容。内容要符合角色性格，与聊天记录相关联，并且要真实自然。\n\n请以JSON格式输出，包含以下内容：\n\n{\n  "contacts": [\n    {"name": "联系人名字", "phone": "手机号", "relation": "关系", "notes": "备注"}\n  ],\n  "wechatChats": [\n    {"name": "聊天对象", "lastMessage": "最后一条消息", "time": "时间", "unread": 0}\n  ],\n  "browserHistory": [\n    {"title": "网页标题", "url": "网址", "time": "访问时间"}\n  ],\n  "taobaoOrders": [\n    {"title": "商品名称", "price": "价格", "status": "状态"}\n  ],\n  "alipayBills": [\n    {"title": "账单标题", "amount": "金额", "type": "income或expense", "time": "时间"}\n  ],\n  "photos": [\n    {"description": "照片描述", "location": "拍摄地点", "time": "拍摄时间"}\n  ],\n  "notes": [\n    {"title": "标题", "content": "内容", "time": "创建时间"}\n  ],\n  "musicPlaylist": [\n    {"title": "歌曲名", "artist": "歌手", "mood": "适合的心情"}\n  ],\n  "mapHistory": [\n    {"name": "地点名称", "address": "详细地址", "time": "搜索时间"}\n  ]\n}\n\n要求：\n1. 每个类别至少生成3-8条真实的内容\n2. 内容要与角色性格和聊天记录高度相关\n3. 时间格式要自然（如"2小时前"、"昨天"、"3天前"等）\n4. 内容要有细节，不要太笼统\n5. **必须严格按照JSON格式输出**\n6. **不要有任何markdown标记、代码块符号、额外说明**\n7. **字符串中不要有换行符，用\\n代替**\n8. **所有字段必须用双引号，不要用单引号**\n\n直接输出纯JSON，示例格式：\n{"contacts":[{"name":"张三","phone":"138****1234","relation":"朋友","notes":"备注"}],...}\n\n现在开始输出JSON：`},Vn=async(e,t)=>{try{const r=`ai_phone_${e}`,a=localStorage.getItem(r);if(a){const e=JSON.parse(a);if(Date.now()-e.generatedAt<36e5)return e}const o=Gn(e);let s=(await he([{role:"user",content:o}])).trim();s=s.replace(/```json\s*/g,"").replace(/```\s*/g,"").trim();const i=s.match(/\{[\s\S]*\}/);let c;i&&(s=i[0]),s=s.replace(/[\u0000-\u001F\u007F-\u009F]/g,"").replace(/,(\s*[}\]])/g,"$1");try{c=JSON.parse(s)}catch(n){throw new Error(`JSON解析失败: ${(null==n?void 0:n.message)||"未知错误"}`)}const l={characterId:e,characterName:t,generatedAt:Date.now(),contacts:c.contacts||[],wechatChats:c.wechatChats||[],browserHistory:c.browserHistory||[],taobaoOrders:c.taobaoOrders||[],alipayBills:c.alipayBills||[],photos:c.photos||[],notes:c.notes||[],musicPlaylist:c.musicPlaylist||[],mapHistory:c.mapHistory||[]};return localStorage.setItem(r,JSON.stringify(l)),l}catch(r){return{characterId:e,characterName:t,generatedAt:Date.now(),contacts:[{name:"妈妈",phone:"138****8888",relation:"家人",notes:"最爱我的人"}],wechatChats:[{name:"好友",lastMessage:"在吗？",time:"刚刚",unread:1}],browserHistory:[{title:"百度首页",url:"https://www.baidu.com",time:"5分钟前"}],taobaoOrders:[{title:"商品",price:"99.00",status:"待收货"}],alipayBills:[{title:"转账",amount:"100.00",type:"expense",time:"今天"}],photos:[{description:"风景照",location:"公园",time:"上周"}],notes:[{title:"待办事项",content:"记得买东西",time:"昨天"}],musicPlaylist:[{title:"歌曲",artist:"歌手",mood:"放松"}],mapHistory:[{name:"家",address:"住宅区",time:"今天"}]}}};function Hn(){return`msg_${Date.now()}_${Math.random().toString(36).substr(2,9)}`}function Wn(e){return{id:Hn(),role:"user",content:e.trim(),timestamp:Date.now()}}function Xn(e){return{id:Hn(),role:"assistant",content:e.trim(),timestamp:Date.now(),swipes:[e.trim()],currentSwipeIndex:0}}function Qn(e,t){return!e.swipes||t<0||t>=e.swipes.length?e:{...e,currentSwipeIndex:t,content:e.swipes[t]}}function Yn(e){const t=e.currentSwipeIndex??0;return t<=0?null:Qn(e,t-1)}function Zn(e){const t=e.swipes||[],n=e.currentSwipeIndex??0;return n>=t.length-1?null:Qn(e,n+1)}function er(e,t){const n=[...e.swipes||[e.content]];return n[e.currentSwipeIndex??0]=t,{...e,content:t,swipes:n}}function tr(e,t,n){return{id:`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,characterId:e,presetId:t,messages:[],greetingIndex:0,createdAt:(new Date).toISOString(),updatedAt:(new Date).toISOString()}}function nr(e){const t=function(){const e=localStorage.getItem("offline_chat_sessions");return e?JSON.parse(e):[]}(),n=t.findIndex(t=>t.id===e.id),r={...e,updatedAt:(new Date).toISOString()};n>=0?t[n]=r:t.push(r),localStorage.setItem("offline_chat_sessions",JSON.stringify(t))}const rr="moments",ar="chat_messages",or="emojis",sr="settings";let ir=null;async function cr(){return ir||new Promise((e,t)=>{const n=indexedDB.open("WeChatAppDB",2);let r=!1;const a=setTimeout(()=>{r||(r=!0,t(new Error("IndexedDB 初始化超时")))},1e4);n.onerror=()=>{r||(r=!0,clearTimeout(a),t(n.error))},n.onblocked=()=>{},n.onsuccess=()=>{r||(r=!0,clearTimeout(a),ir=n.result,e(ir))},n.onupgradeneeded=e=>{const t=e.target.result;e.oldVersion;if(!t.objectStoreNames.contains(rr)){const e=t.createObjectStore(rr,{keyPath:"id"});e.createIndex("createdAt","createdAt",{unique:!1}),e.createIndex("userId","userId",{unique:!1})}if(!t.objectStoreNames.contains(ar)){t.createObjectStore(ar,{keyPath:"key"}).createIndex("characterId","characterId",{unique:!1})}if(!t.objectStoreNames.contains(or)){t.createObjectStore(or,{keyPath:"id"}).createIndex("addTime","addTime",{unique:!1})}t.objectStoreNames.contains(sr)||t.createObjectStore(sr,{keyPath:"key"})}})}async function lr(){try{if("storage"in navigator&&"estimate"in navigator.storage){const e=await navigator.storage.estimate(),t=e.usage||0,n=e.quota||0,r=n>0?t/n*100:0;return{used:Math.round(t/1024/1024),quota:Math.round(n/1024/1024),percentage:Math.round(r)}}}catch(e){}return{used:0,quota:0,percentage:0}}async function ur(e,t){try{const n={key:`chat_messages_${e}`,characterId:e,messages:t,updatedAt:Date.now()},r=await async function(e,t){try{const n=(await cr()).transaction([e],"readwrite");return n.objectStore(e).put(t),new Promise((e,t)=>{n.oncomplete=()=>{e(!0)},n.onerror=()=>{t(n.error)}})}catch(n){return!1}}(ar,n);return r}catch(n){try{return localStorage.setItem(`chat_messages_${e}`,JSON.stringify(t)),!0}catch(r){return!1}}}async function mr(){try{const e=(await cr()).transaction([ar],"readonly"),t=e.objectStore(ar).getAll();return new Promise(e=>{t.onsuccess=()=>{const n=t.result||[];let r=0;const a=n.map(e=>{var t;const n=(null==(t=e.messages)?void 0:t.length)||0;return r+=n,{chatId:e.characterId,messageCount:n}});e({totalChats:n.length,totalMessages:r,chatSizes:a.sort((e,t)=>t.messageCount-e.messageCount)})},t.onerror=()=>{e({totalChats:0,totalMessages:0,chatSizes:[]})}})}catch(e){return{totalChats:0,totalMessages:0,chatSizes:[]}}}async function dr(){let e=0,t=0,n=0;try{const a=[];for(let e=0;e<localStorage.length;e++){const t=localStorage.key(e);t&&t.startsWith("chat_messages_")&&a.push(t)}for(const o of a)try{const r=localStorage.getItem(o);if(!r)continue;const a=JSON.parse(r),s=o.replace("chat_messages_","");await ur(s,a)?(e++,n+=a.length):t++}catch(r){t++}}catch(r){}return{success:e,failed:t,totalMessages:n}}function hr(){let e=0,t=0;const n=[];for(let r=0;r<localStorage.length;r++){const e=localStorage.key(r);e&&e.startsWith("chat_messages_")&&n.push(e)}return n.forEach(n=>{try{const r=localStorage.getItem(n);r&&(t+=new Blob([r]).size),localStorage.removeItem(n),e++}catch(r){}}),{cleaned:e,freedSpace:t}}async function gr(e,t){var n,r,a;const o=function(){const e=localStorage.getItem("apiSettings");if(!e)throw new Error("请先在设置中配置API");try{const t=JSON.parse(e);return{baseUrl:t.baseUrl,apiKey:t.apiKey,model:t.model,provider:t.provider}}catch{throw new Error("API配置格式错误")}}(),s={model:o.model,messages:[{role:"user",content:e}],temperature:.8,max_tokens:2e3},i=await fetch(o.baseUrl+"/chat/completions",{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${o.apiKey}`},body:JSON.stringify(s)});if(!i.ok){const e=await i.text();throw new Error(`API调用失败: ${i.statusText} - ${e}`)}return(null==(a=null==(r=null==(n=(await i.json()).choices)?void 0:n[0])?void 0:r.message)?void 0:a.content)||""}function pr(e){localStorage.setItem("forum_characters",JSON.stringify(e)),localStorage.setItem("forum_initialized","true")}function fr(){const e=localStorage.getItem("forum_characters");if(!e)return[];try{return JSON.parse(e)}catch{return[]}}function yr(){const e=localStorage.getItem("forum_selected_characters");return e?JSON.parse(e):[]}function wr(e){localStorage.setItem("forum_selected_characters",JSON.stringify(e))}async function Sr(e,t){const n=Bn.map(e=>({"梗":e["梗"],"含义":e["含义"]})),r=n.length>0?`\n\n🎭 网络梗库（请自然地融入到帖子和评论中，理解含义后使用）：\n${n.map((e,t)=>`${t+1}. "${e.梗}" - ${e.含义}`).join("\n")}\n\n示例用法（要符合梗的含义）：\n- "这波操作真的绷不住了"（表示忍不住笑了）\n- "经典，纯纯的纯良"（讽刺某事很离谱）\n- "我的评价是不如..."（用于吐槽）\n- "你礼貌吗？"（表示被冒犯或质疑对方）\n`:"",a=`你现在要为话题「${e}」创建一个真实的论坛讨论区。\n\n话题介绍：${t}\n${r}\n\n请生成10-15条帖子和评论，使用以下简单格式（每行一条，用|||分隔）：\n\n用户格式：\nU|||用户ID|||昵称|||签名|||emoji头像|||粉丝数\n\n帖子格式：\nP|||帖子ID|||用户ID|||内容(80-150字)|||点赞数\n\n评论格式：\nC|||评论ID|||用户ID|||内容(20-50字)|||回复哪个帖子|||回复哪个评论(可选)|||点赞数\n\n要求：\n1. 先生成15-20个用户(用户ID用user1, user2...)\n2. 然后生成10-15条帖子(帖子ID用post1, post2...)\n3. 每个帖子下3-8条评论(评论ID用c1, c2...)\n4. 评论可以互相回复形成楼中楼\n5. 内容要有不同观点：赞同、反对、调侃、吐槽等\n${r?"6. 自然融入梗库里的梗，不要生硬":""}\n\n示例：\nU|||user1|||键盘侠|||专业抬杠二十年|||👨‍💼|||12000\nP|||post1|||user1|||今天这话题我必须说两句...|||45\nC|||c1|||user2|||同意楼主|||post1||||||12\nC|||c2|||user3|||我不这么认为|||post1|||c1|||8\n\n直接输出，不要有其他说明文字！`,o=await gr(a);try{const e=o.split("\n").map(e=>e.trim()).filter(e=>e.length>0),t=[],n=[],r={},a=Date.now();for(const o of e){const e=o.split("|||").map(e=>e.trim());if("U"===e[0]&&e.length>=6)t.push({id:e[1],name:e[2],bio:e[3],avatar:e[4],followers:parseInt(e[5])||1e3});else if("P"===e[0]&&e.length>=5){const t=e[1];n.push({id:t,authorId:e[2],content:e[3],likes:parseInt(e[4])||0,timestamp:a-Math.floor(24*Math.random()*3600*1e3),comments:[]}),r[t]=[]}else if("C"===e[0]&&e.length>=7){const t={id:e[1],authorId:e[2],content:e[3],likes:parseInt(e[6])||0,timestamp:a-Math.floor(20*Math.random()*3600*1e3),replyTo:e[5]||null},n=e[4];r[n]||(r[n]=[]),r[n].push(t)}}n.forEach(e=>{r[e.id]&&(e.comments=r[e.id])});const s={users:t,posts:n};if(!s.users||!s.posts)throw new Error("数据格式不完整");return s.users.length,s.posts.length,s}catch(s){throw new Error("AI生成内容解析失败："+s.message)}}const Ir=Object.freeze(Object.defineProperty({__proto__:null,compressImage:(e,t=1024,n=1024,r=.8)=>new Promise((a,o)=>{const s=new FileReader;s.onload=e=>{var s;const i=new Image;i.onload=()=>{const e=document.createElement("canvas");let s=i.width,c=i.height;s>c?s>t&&(c=Math.round(c*t/s),s=t):c>n&&(s=Math.round(s*n/c),c=n),e.width=s,e.height=c;const l=e.getContext("2d");l?(l.drawImage(i,0,0,s,c),e.toBlob(e=>{if(!e)return void o(new Error("压缩失败"));const t=new FileReader;t.onloadend=()=>{a(t.result)},t.readAsDataURL(e)},"image/jpeg",r)):o(new Error("无法获取canvas上下文"))},i.onerror=()=>o(new Error("图片加载失败")),i.src=null==(s=e.target)?void 0:s.result},s.onerror=()=>o(new Error("文件读取失败")),s.readAsDataURL(e)}),isValidImageSize:(e,t=10)=>{const n=1024*t*1024;return e.size<=n}},Symbol.toStringTag,{value:"Module"}));export{Lt as $,Ze as A,et as B,Xe as C,Te as D,Mt as E,kt as F,qt as G,Ut as H,Qe as I,Vt as J,Ht as K,Qt as L,Re as M,he as N,Yt as O,cn as P,Nt as Q,Ne as R,d as S,Ke as T,Tt as U,xt as V,Ot as W,At as X,ft as Y,rt as Z,Wt as _,o as a,Fn as a$,zt as a0,at as a1,an as a2,sn as a3,tn as a4,Ge as a5,Be as a6,Se as a7,_e as a8,l as a9,vn as aA,$n as aB,Me as aC,De as aD,Ce as aE,ve as aF,en as aG,_ as aH,Mn as aI,An as aJ,jn as aK,Ln as aL,Jn as aM,Tn as aN,Pn as aO,ut as aP,lt as aQ,wt as aR,gt as aS,pt as aT,ht as aU,dt as aV,mt as aW,St as aX,yt as aY,Un as aZ,Bn as a_,dn as aa,mn as ab,hn as ac,u as ad,m as ae,pn as af,fn as ag,Sn as ah,a as ai,r as aj,pe as ak,ge as al,ke as am,ye as an,Ie as ao,$t as ap,bt as aq,jt as ar,Pt as as,Et as at,Ct as au,In as av,kn as aw,bn as ax,xn as ay,_n as az,k as b,Vn as b0,tr as b1,nr as b2,Zn as b3,Yn as b4,er as b5,Wn as b6,Xn as b7,lr as b8,mr as b9,dr as ba,hr as bb,yr as bc,pr as bd,wr as be,fr as bf,Sr as bg,Z as bh,ee as bi,ie as bj,le as bk,ce as bl,ae as bm,tt as bn,It as bo,Bt as bp,Kt as bq,On as br,Nn as bs,zn as bt,Rn as bu,Ir as bv,Y as c,T as d,L as e,P as f,y as g,H as h,h as i,U as j,q as k,F as l,W as m,X as n,Q as o,je as p,z as q,Pe as r,f as s,G as t,J as u,Oe as v,Ue as w,Ve as x,He as y,Ye as z};
